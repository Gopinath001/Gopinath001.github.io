<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bluepie&#39;s Journal on Bluepie&#39;s Journal</title><link>//bluepie.in/</link><description>Recent content in Bluepie&#39;s Journal on Bluepie&#39;s Journal</description><language>en-us</language><lastBuildDate>Sun, 26 Sep 2021 10:22:12 +0000</lastBuildDate><atom:link href="/" rel="self" type="application/rss+xml"/><item><title>Html to React</title><link>//bluepie.in/2021/09/html-to-react/</link><pubDate>Sun, 26 Sep 2021 10:22:12 +0000</pubDate><guid>//bluepie.in/2021/09/html-to-react/</guid><description>
&lt;!--
mention, that the problem is recursive its recursive
react rerendering to manage key,
representation
handling headtag elements --&gt;
&lt;p&gt;I&amp;rsquo;ve been doing new development in my offtime and i&amp;rsquo;m totally enjoying the challenges and hurdles. I wanted to share an interesting problem that I solved, it is a small part on a project that is not public yet (as of 2021 SEP).&lt;/p&gt;
&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;
&lt;p&gt;I have a htmlString that I have to convert to react elements.&lt;/p&gt;
&lt;p&gt;but why?&amp;hellip; &lt;em&gt;the main reasons were&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have a react wrapper, that enhances the dom-elements.
&lt;ul&gt;
&lt;li&gt;I need this wrapper to handle all the elements.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;because Dom Operations are expensive, but React is not &lt;a href=&#34;https://reactjs.org/docs/faq-internals.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://reactjs.org/docs/faq-internals.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ok-how-do-i-solve-this-problem&#34;&gt;ok, how do I solve this problem?&lt;/h2&gt;
&lt;p&gt;step 1 :&lt;/p&gt;
&lt;p&gt;I need to parse the htmlString to a dom-tree. luckly there is &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;step 2:&lt;/p&gt;
&lt;p&gt;I need to convert the &lt;strong&gt;dom-tree to react elements&lt;/strong&gt; but how?. Since the dom is a tree, the problem is to transform the dom tree into a react tree, which if you give it a thought, it tends to have a &lt;strong&gt;recursive structure&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;step 3:&lt;/p&gt;
&lt;p&gt;Identify the api-calls that are needed to transform the dom-tree into a react tree. Checking the docs, I only need one, &lt;a href=&#34;https://reactjs.org/docs/react-api.html#createelement&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://reactjs.org/docs/react-api.html#createelement&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;step 4:&lt;/p&gt;
&lt;p&gt;Attach my wrapper to it.&lt;/p&gt;
&lt;h2 id=&#34;domparser-domtree-from-string&#34;&gt;DomParser, Domtree from string&lt;/h2&gt;
&lt;p&gt;I was supprised to find that many people don&amp;rsquo;t know about &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&lt;/a&gt;. It has a &lt;strong&gt;constructor&lt;/strong&gt;, which takes a string and returns a dom-tree. I believe this is best way to parse html to dom-tree.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const domParser: any = new DOMParser();
export const htmlProcessor = (html: string): ReactNode =&amp;gt; {
if (typeof html !== &#39;string&#39;) {
console.error(&#39;htmlParser: html is not a string&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
let doc = domParser.parseFromString(html, &#39;text/html&#39;);
if (doc === null) {
console.error(&#39;htmlParser: unable to process html&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;writing-a-function-that-converts-dom-tree-and-returns-a-react-tree&#34;&gt;Writing a function that converts dom-tree and returns a react-tree&lt;/h2&gt;
&lt;p&gt;With &lt;a href=&#34;https://reactjs.org/docs/react-api.html#createelement&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;React.createElement&lt;/a&gt;, I can create a react-element.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const nodeName = &#39;div&#39;;
const attributes = {
className: &#39;class-name-that-i-want&#39;, // note: attributes must be camelCase
id: &#39;created_by_custom&#39;,
};
const children = null; // note: if not null, the children should also be react nodes, ie the output from createElement.
React.createElement(nodeName, attributes, children);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;experimenting with a little example above, I identified three things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I need tagName, (&amp;lsquo;div&amp;rsquo;, &amp;lsquo;span&amp;rsquo;,etc)&lt;/li&gt;
&lt;li&gt;I need attributes, (key,className, id, etc)&lt;/li&gt;
&lt;li&gt;I need children, (null, react-elements, text )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;So lets begin&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I Have to be careful here, I do this operation for every user action. So to maintain perfomance I need to maintain key consistency,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;so what is key, why I&amp;rsquo;m stressing about it?. &lt;a href=&#34;https://reactjs.org/docs/glossary.html#keys&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;key React Docs&lt;/a&gt;. after going through the docs, see the example below, if i add a new element below &lt;em&gt;&lt;strong&gt;div key=&amp;ldquo;4&amp;rdquo;&lt;/strong&gt;&lt;/em&gt;, all elements after &lt;em&gt;&lt;strong&gt;key=5&lt;/strong&gt;&lt;/em&gt;, will be recreated with differnet keys. This will cause react algorithm to rerender all the elements with the new key.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;div key=&amp;quot;1&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;3&amp;quot;
div key=&amp;quot;4&amp;quot;
div key=&amp;quot;5&amp;quot;
div key=&amp;quot;6&amp;quot;
div key=&amp;quot;7&amp;quot;
div key=&amp;quot;8&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead I need to generate keys in the following structure, this way I can maintain key consistency in the virtual-dom. If I were to append a &lt;strong&gt;&lt;em&gt;new element to div &amp;lsquo;new-child-add&amp;rsquo;, only the div &amp;lsquo;new-child-add&amp;rsquo; and its children will be rerendered.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;div key=&amp;quot;1&amp;quot;
div id=&amp;quot;new-child-add&amp;quot; key=&amp;quot;1&amp;quot;
div key=&amp;quot;1&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;1&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;keeping-the-things-above-in-mind-i-wrote-the-following-function&#34;&gt;Keeping the things above in mind, I wrote the following function.&lt;/h2&gt;
&lt;p&gt;Define a function that takes a dom-element. I need to call this recursively later. To maintain key consistency, I also need to pass the key as a parameter.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const converter = (element: HTMLElement, key = 0) =&amp;gt; {
if (element === undefined) {
return;
}
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I need to get the nodeName and attributes for the current element first. I use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeName&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;nodeName&lt;/a&gt;, &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;attributes&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://reactjs.org/docs/dom-elements.html#style&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;style&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const nodeName = element.nodeName.toLowerCase();
let attributes: { [key: string]: string | any } = {};
for (var i = 0; element.attributes &amp;amp;&amp;amp; i &amp;lt; element.attributes.length; i++) {
const attribute = element.attributes[i];
const reactName = toCamelCase(attribute.name);
let value = attribute.name === &#39;style&#39; ? convertStyleStringToObject(attribute.value) : attribute.value.trim();
attributes[reactName] = value;
}
attributes[&#39;key&#39;] = key++;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before creating the element, I need to process all the child nodes, if there are any. I use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Node/childNodes&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;childNodes&lt;/a&gt;. Note that &amp;lsquo;#text&amp;rsquo; have to be handled separately, because it is not a dom-element, its just a string. Also note, I called the function recursively.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;let children: ReactNode[] = [];
for (let i = 0; i &amp;lt; element.childNodes.length; i++) {
let child = element.childNodes[i];
if (child[&#39;nodeName&#39;] === &#39;#text&#39;) {
if (child.textContent) {
const content = child.textContent.replaceAll(&#39;\n&#39;, &#39;&#39;);
content &amp;amp;&amp;amp; child.push(content);
}
continue;
}
if (child[&#39;nodeName&#39;] === &#39;#comment&#39;) {
continue; // I dont want to render comments
}
if (nodeName !== &#39;script&#39; &amp;amp;&amp;amp; nodeName !== &#39;style&#39;) {
children.push(converter(child as HTMLElement, key++)); //recursive call
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have all the properties, now I can create the element.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;return React.createElement(nodeName, attributes, children);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My function is now complete. I call my wrapper function in different locations based on the type of the element and its attributes.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const domParser: any = new DOMParser();
export const htmlProcessor = (html: string): ReactNode =&amp;gt; {
if (typeof html !== &#39;string&#39;) {
console.error(&#39;htmlParser: html is not a string&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
let doc = domParser.parseFromString(html, &#39;text/html&#39;);
if (doc === null) {
console.error(&#39;htmlParser: unable to process html&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
return converter(doc as unknown as HTMLElement, 1);
};
const converter = (element: HTMLElement, key = 0) =&amp;gt; {
if (element === undefined) {
return;
}
const nodeName = element.nodeName.toLowerCase();
let attributes: { [key: string]: string | any } = {};
for (var i = 0; element.attributes &amp;amp;&amp;amp; i &amp;lt; element.attributes.length; i++) {
const attribute = element.attributes[i];
const reactName = toCamelCase(attribute.name);
let value = attribute.name === &#39;style&#39; ? convertStyleStringToObject(attribute.value) : attribute.value.trim();
attributes[reactName] = value;
}
attributes[&#39;key&#39;] = key++;
let children: ReactNode[] = [];
/**
* wrapper logic here and return the element. If I only want the attributes
* to be processed, but dont want to process the children.
*/
for (let i = 0; i &amp;lt; element.childNodes.length; i++) {
let child = element.childNodes[i];
if (child[&#39;nodeName&#39;] === &#39;#text&#39;) {
if (child.textContent) {
const content = child.textContent.replaceAll(&#39;\n&#39;, &#39;&#39;);
content &amp;amp;&amp;amp; child.push(content);
}
continue;
}
if (child[&#39;nodeName&#39;] === &#39;#comment&#39;) {
continue;
}
if (nodeName !== &#39;script&#39; &amp;amp;&amp;amp; nodeName !== &#39;style&#39;) {
children.push(converter(child as HTMLElement, key++));
}
}
/**
* wrapper logic here and return the element. If I want the attrbibutes
* and children to be processed.
*/
return React.createElement(nodeName, attributes, children);
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;end&#34;&gt;End&lt;/h1&gt;
&lt;p&gt;This was a fun problem to solve, well that marks the end. ~seeya&lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;I mention the edge cases below, Only read it, if you are interested.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;edge-cases&#34;&gt;Edge cases&lt;/h2&gt;
&lt;p&gt;There are the following edge cases that I have not covered in this article. But I have in my project,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;img tag should not have child param passed to it&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;if (nodeName === &#39;img&#39;) {
return React.createElement(nodeName, { key: key++, ...attributes }, null);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if its a text node, then its children should be a string.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;if (element.nodeType === 3) {
return React.createElement(nodeName, { ...attributes, key: key++ }, element.textContent);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;handling &amp;lsquo;&amp;lt;head&amp;gt;&amp;rsquo; tag is different too, because each tag with its different property servers a different purpose.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;let el;
switch (nodeName) {
case &#39;meta&#39;:
el = element as HTMLMetaElement;
// meta tag has http-equiv attribute &amp;amp; content attribute, but no children
return React.createElement(nodeName, { httpEquiv: el.httpEquiv, content: el.content, key: nodeName + key++ }, null);
case &#39;link&#39;:
el = element as HTMLLinkElement;
let type = null;
if (el.type) {
type = el.type;
}
// external link has rel attribute &amp;amp; href attribute, but no children
return React.createElement(
nodeName,
{
href: el.href,
rel: el.rel,
type,
key: nodeName + key++,
},
null
);
case &#39;br&#39;:
return React.createElement(nodeName, { key: nodeName + key++ }, null);
case &#39;title&#39;:
case &#39;script&#39;:
case &#39;style&#39;:
// script/style/title tags have no children
// script &amp;amp; style have contents in them, so innerHTML
return React.createElement(nodeName, {
dangerouslySetInnerHTML: { __html: element.innerHTML, key: nodeName + key++ },
});
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Android Reversing Part 5 But With Frida</title><link>//bluepie.in/2021/08/android-reversing-part-5-with-frida/</link><pubDate>Sat, 21 Aug 2021 07:25:55 +0000</pubDate><guid>//bluepie.in/2021/08/android-reversing-part-5-with-frida/</guid><description>
&lt;h2 id=&#34;why-frida&#34;&gt;Why Frida?&lt;/h2&gt;
&lt;p&gt;Becase it can be many things, &lt;a href=&#34;https://frida.re/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;know more&lt;/a&gt;. Its is,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easy, sure learning curve takes some time, but it pays off spectacularly.&lt;/li&gt;
&lt;li&gt;efficient, a rough estimate for the modification took 30 min in frida vs 2 hours in traditional methods, its way more flexible.&lt;/li&gt;
&lt;li&gt;elegant when compared to traditional ways. you get creative new ideas and implement them easily (implementating manually takes way longer).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;my-setup&#34;&gt;My setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.genymotion.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Genymotion&lt;/a&gt;, but why? (better than avd) runs way faster than avd, default root, runs via virtual box, image size is small, less cpu usage compared to avd.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;latest frida server and client from &lt;a href=&#34;https://github.com/frida/frida/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;frida/releases&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in my case, &lt;a href=&#34;https://github.com/frida/frida/releases/download/15.0.17/frida-server-15.0.17-android-x86.xz&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;lsquo;frida-server-15.0.17-android-arm.xz&amp;rsquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;move the fridaserver to android device/emulator and start it.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb push /data/local/tmp/firda-server
adb shell
cd /data/local/tmp/frida-server
./frida-server &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;modding-with-very-little-effort&#34;&gt;Modding with very little effort&lt;/h2&gt;
&lt;p&gt;Frida has a great feature &lt;strong&gt;&amp;lsquo;TRACE&amp;rsquo;&lt;/strong&gt;, but without manually injection, by doing it dynamically, &lt;a href=&#34;https://frida.re/docs/frida-trace/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;more here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;what it does in oneline is &lt;strong&gt;you give it &amp;lsquo;wildcard methods&amp;rsquo; and a process, it will then log the input params and out values when the traced method is called of the target process&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# for tracing all methods which contains &#39;license&#39;
noone@pc:frida-trace -U Firewall -j &#39;*!*license*/isu&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Trace Logs&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; 26442 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityRules&amp;gt;&amp;quot;)
26443 ms &amp;lt;= false
26598 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityRules&amp;gt;&amp;quot;)
26599 ms &amp;lt;= false
26603 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityRules&amp;gt;&amp;quot;)
26604 ms &amp;lt;= false
39331 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.Settings&amp;gt;&amp;quot;)
39331 ms &amp;lt;= false
45614 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.Settings&amp;gt;&amp;quot;)
45614 ms &amp;lt;= false
49377 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityLogs&amp;gt;&amp;quot;)
49378 ms &amp;lt;= false
49567 ms &amp;lt;= false
49581 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityLogs&amp;gt;&amp;quot;)
49581 ms &amp;lt;= false
52637 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.SettingsInApp&amp;gt;&amp;quot;)
52637 ms &amp;lt;= false
52786 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.SettingsInApp&amp;gt;&amp;quot;)
52789 ms &amp;lt;= false
52792 ms SettingsInApp.initLicense()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With just guessing the method name &amp;lsquo;license&amp;rsquo;, following license methods were found and its input and output params are logged when run via adb, without even decompiling and going through code (isn&amp;rsquo;t this great!?)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;8 directories, 31 files
__handlers__/
├── com.protectstar.firewall.activity.settings.Settings
│   └── isLicenseActive.js &amp;lt;--- this file seems interesting?!
├── com.protectstar.firewall.activity.settings.SettingsInApp
│   ├── initLicense.js
...
│   └── licenseSuccess.js
├── com.protectstar.firewall.cloud.Auth
│   ├── getLicense1Url.js
...
├── com.protectstar.firewall.utility.LicenseActivation
│   ├── access_000.js
...
│   ├── checkLicenseDuration.js &amp;lt;--- this file seems interesting?!
│   └── _init.js
├── com.protectstar.firewall.utility.LicenseActivation_Customer
...
│   ├── access_900.js
│   └── _init.js
├── com.protectstar.firewall.utility.LicenseActivation_Reason
│   ├── valueOf.js
│   └── values.js
├── com.protectstar.firewall.utility.LicenseActivation_ResponseListener
   ├── error.js
   └── licenseSuccess.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now navigate though all sections of the app and find any interesting methods invoked through the trace logs.&lt;/p&gt;
&lt;h2 id=&#34;patching-on-the-fly-without-seeing-the-original-code&#34;&gt;patching on the fly, without seeing the original code&lt;/h2&gt;
&lt;p&gt;By observing the invoked methods and its input/output values, we can guess the method name to patch, it is &lt;em&gt;&amp;lsquo;isLicenseActive&amp;rsquo; from &amp;lsquo;com.protectstar.firewall.activity.settings.Settings&amp;rsquo;&lt;/em&gt;, in frida-trace, we see the return value is &lt;em&gt;False&lt;/em&gt;, so why not make it as true and observe the behaviour?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// patching the method
function main() {
Java.perform(function () {
// match the method signature
Java.use(&#39;com.protectstar.firewall.activity.settings.Settings&#39;).isLicenseActive.implementation = function (
context
) {
return true;
};
});
}
setImmediate(main);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After patching, navigating the app we now see the premium features are unlocked, that was way easier than conventional methods, greatly reduces the time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/android-reversing-part-5/patch_with_frida_accessing_premium.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I intend to use Frida in the future stuff I do, its simply great. Seeya next time. untill then - aghontpi :)&lt;/p&gt;</description></item><item><title>Android Reversing Part 5</title><link>//bluepie.in/2021/07/android-reversing-part-5/</link><pubDate>Fri, 16 Jul 2021 15:00:24 +0000</pubDate><guid>//bluepie.in/2021/07/android-reversing-part-5/</guid><description>
&lt;hr /&gt;
&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#why--motivation&#34;&gt;Why &amp;amp; Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#decompiling&#34;&gt;Decompiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#finding-where-to-patch&#34;&gt;Finding where to patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#patching-recompiling-and-installing-it-on-device&#34;&gt;Patching, recompiling and installing it on device&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#premium-features-does-not-work-fully&#34;&gt;App&amp;rsquo;s premium features does not work fully&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#finding-integrity-checks-digging-deeper-for-final-patch&#34;&gt;Finding integrity checks, digging deeper for final patch.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#end&#34;&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;why-motivation&#34;&gt;Why &amp;amp; Motivation&lt;/h2&gt;
&lt;p&gt;I wanted to monitor my mobile network traffic after I found some wierd dns logs in my custom dns server, I could not figure out which app made that request thus I found out this &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.protectstar.firewall&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;app&lt;/a&gt; in playstore called &amp;lsquo;No Root Firewall, Internet Data Blocker Protection&amp;rsquo;. it had good ui and satisfied 60% of my usage needs. The downside of this is they require a montly subscription for app features. This is bit much if you ask me so decided to mod it for personal use. &lt;em&gt;In my defense, I did purchase it for a month.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/android-reversing-part-5/orderhistoryforfirewall.png&#34; alt=&#34;Proof that I bought this thing&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My past posts cover which tools I use, how to decompile, configs, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;decompiling&#34;&gt;Decompiling&lt;/h2&gt;
&lt;p&gt;Extracing the app.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
pm path com.placeholder.app
adb pull path_of_apk # one by one
# we get the following files
-rw-rw-r-- 1 nouser nouser 6273850 base.apk
-rw-rw-r-- 1 nouser nouser 90809 split_config.arm64_v8a.apk
-rw-rw-r-- 1 nouser nouser 126542 split_config.xxhdpi.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This app uses &lt;a href=&#34;https://developer.android.com/guide/app-bundle&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;app bundle&lt;/a&gt; so we make use of &amp;ndash;use-aapt2 flag in apk-tool &lt;em&gt;I am using apktool v2.5.0&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;finding-where-to-patch&#34;&gt;Finding where to patch&lt;/h2&gt;
&lt;p&gt;after decompiling, immediately in mainActivity we find a call to this,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;//from
public static boolean hasSubscription(Context context) {
if (Settings.isLicenseActive(context)) {
return true;
}
try {
Subscription subscription = (Subscription) new TinyDB(context).getObject(Settings.SAVE_KEY_SUBSCRIPTION, Subscription.class);
if (subscription == Subscription.Month || subscription == Subscription.Year || subscription == Subscription.Lifetime) {
return true;
}
return false;
} catch (Exception unused) {
return false;
}
}
// to
public static boolean hasSubscription(Context context){
return true;
}
//from
public static boolean isLifeTime(Context context) {
if (!hasSubscription(context)) {
return false;
}
try {
if (((Subscription) new TinyDB(context).getObject(Settings.SAVE_KEY_SUBSCRIPTION, Subscription.class)) == Subscription.Lifetime) {
return true;
}
return false;
} catch (Exception unused) {
return false;
}
}
//to
public static boolean isLifeTime(Context context){
return true;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Smali logic for return true.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
const/4 v1, 0x1
return v1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;patching-recompiling-and-installing-it-on-device&#34;&gt;Patching, recompiling and installing it on device&lt;/h2&gt;
&lt;p&gt;while recompiling and signing, sign all the split apks with the same key, even if you did not touch the other split apks.
(this is because android expects all the split apks to have the same signature)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
zip -d ./split_config.arm64_v8a.apk META-INF/\*
zip -d ./split_config.xxhdpi.apk META-INF/\*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then sign them as mentioned from my previous posts.&lt;/p&gt;
&lt;p&gt;For installing, since we have 3 apks&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
├── base.apk
├── split_config.arm64_v8a.apk
└── split_config.xxhdpi.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
adb install-multiple ./base.apk ./split_config.arm64_v8a.apk ./split_config.xxhdpi.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;premium-features-does-not-work-fully&#34;&gt;Premium features does not work fully&lt;/h2&gt;
&lt;p&gt;After installing and using it, it was apparent that some of the premium features were not working, like filter lists provided by the app, ip information and location presented visually in map.&lt;/p&gt;
&lt;p&gt;In situations like this, there could be only one possible scenario and that is an additional check, it may be in the form of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;app integrity, whether the app was tampered&lt;/li&gt;
&lt;li&gt;was it not installed from google play store&lt;/li&gt;
&lt;li&gt;verifying the purchase information via google services,&lt;/li&gt;
&lt;li&gt;based on implementor&amp;rsquo;s thought process..etc,&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;finding-integrity-checks-digging-deeper-for-final-patch&#34;&gt;Finding integrity checks, digging deeper for final patch.&lt;/h2&gt;
&lt;p&gt;Digging deeper we find the app along with integrity check,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
public static boolean detect(Context context) {
PackageInfo packageInfo;
Signature[] signatureArr;
try {
if (Build.VERSION.SDK_INT &amp;gt;= 28) {
packageInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 134217728);
} else {
packageInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 64);
}
if (Build.VERSION.SDK_INT &amp;lt; 28) {
signatureArr = packageInfo.signatures;
} else if (packageInfo.signingInfo.hasMultipleSigners()) {
signatureArr = packageInfo.signingInfo.getApkContentsSigners();
} else {
signatureArr = packageInfo.signingInfo.getSigningCertificateHistory();
}
try {
String calculateSHA = calculateSHA(&amp;quot;SHA-1&amp;quot;, signatureArr[0].toByteArray());
if (calculateSHA.equalsIgnoreCase(&amp;quot;44F217A05AE9E2A8FB0F627528EABF8855FBC274&amp;quot;) || calculateSHA.equalsIgnoreCase(&amp;quot;8aa072cdd29068b79d30cbff9afb2d3ab89e7ec4&amp;quot;) || calculateSHA.equalsIgnoreCase(&amp;quot;dfe607e53da092636e47789497365fca36589cba&amp;quot;)) {
return false;
}
return true;
} catch (Exception e) {
e.printStackTrace();
return false;
}
} catch (Throwable unused) {
return false;
}
}
private static String calculateSHA(String str, byte[] bArr) {
try {
return FileUtils.byte2HexFormatted(MessageDigest.getInstance(str).digest(bArr));
} catch (Exception e) {
e.printStackTrace();
return &amp;quot;&amp;quot;;
}
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So add it to the list of item to patch.&lt;/p&gt;
&lt;p&gt;smali equivalent&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
const/4 v1,0x0
return v1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interestingly we also find lucky patcher detection, I don&amp;rsquo;t use lucky patcher, so ignorning this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
public static boolean hasLuckyPatcher(Context context) {
PackageManager packageManager = context.getPackageManager();
return isPackageInstalled(&amp;quot;ru.aaaaaaad.installer&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.sxbuIDfx.pFSOyagrF&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.HUounqZv.qGDvALdrY&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.yFarPSsi.lSWLCBgGE&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.auLSaZJK.OldqqVPqY&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.HvZVLLax.FuBLzbTId&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.FxCVdppm.yVDnvQgJU&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.oCHfhtgN.LaiQlIeIK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.ohHbeFjR.uZvxvLPnK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.oSFnVIfs.fUUFExgWn&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.PDOIPrWH.abjKeIKLW&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.UaLzEHLI.yXTTBtSFW&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.uBVJgfKc.udsaLjziD&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.chelpus.lackypatch&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.dimonvideo.luckypatcher&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.luckypatchers.luckypatcherinstaller&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.LACK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.COIN&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.LOCK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.CRAC&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.COIO&amp;quot;, packageManager);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This time, we also mod the isLicenseActive setting function, since there are a number of calls from others parts of the app, I did not notice this earlier.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// from
public static boolean isLicenseActive(Context context) {
TinyDB tinyDB = new TinyDB(context);
String string = tinyDB.getString(LicenseActivation.SAVE_KEY_EXPIRE_DATE, &amp;quot;&amp;quot;);
if (!string.isEmpty()) {
if (string.equals(&amp;quot;0&amp;quot;)) {
return true;
}
try {
if (new Date().getTime() &amp;lt;= new SimpleDateFormat(&amp;quot;yyyyMMdd&amp;quot;, Locale.getDefault()).parse(string).getTime()) {
return true;
}
tinyDB.removeKey(LicenseActivation.SAVE_KEY_EXPIRE_DATE);
checkProfessional(context, false, null);
return false;
} catch (ParseException unused) {
}
}
return false;
}
//to
public static boolean isLicenseActive(Context context) {
return true;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Patch the two places noted before, repeat the recompiling and installation step.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now The app works with all the premium features.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I dont have to pay 3k every year for using this app.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;If this post offends you in any way, contact me to it take it down.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>Frontend Updates &amp; Rinku Project Upgrade</title><link>//bluepie.in/2021/05/react-updates-rinku-upgrade/</link><pubDate>Fri, 28 May 2021 20:21:39 +0000</pubDate><guid>//bluepie.in/2021/05/react-updates-rinku-upgrade/</guid><description>
&lt;p&gt;&lt;em&gt;Hi!, Like I mentioned in my last update, I took a break from everything ( a month and 3 weeks), the reason behind me missing my post on past month(april). I still had to do office work though, but its&amp;rsquo; alright because it was fun. The time off that I took was the best decision in a while, It helped me rethink priorities.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Like I said in &lt;a href=&#34;https://bluepie.in/2021/03/firebase-realtimedatabase/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;march post 2021&lt;/a&gt;, I&amp;rsquo;ll be posting with new Time management in mind.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;react-update&#34;&gt;React Update&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been working on react projects and learning new things, So i&amp;rsquo;ve decided, that I should upgrade(a barebone react project that I cooked up a while ago called Rinku). &lt;em&gt;upgraded from v1.x.x to v2.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Release contains the seperate commits for each change&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/Rinku-Frontend/releases/tag/v2.0.0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Release 2.x&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Updates that I did&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;javascript -&amp;gt; typescript&lt;/li&gt;
&lt;li&gt;Redux, Redux-toolkit, Redux-Saga&lt;/li&gt;
&lt;li&gt;semantic-ui -&amp;gt; semantic-ui react&lt;/li&gt;
&lt;li&gt;Project structure, File naming structure&lt;/li&gt;
&lt;li&gt;React 16.x -&amp;gt; 17.x&lt;/li&gt;
&lt;li&gt;remove jquery dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-structure-update&#34;&gt;Project Structure Update&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;My current preferred way of setting up folders&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Source files for server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/public/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Static files to be used on client side&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Saga/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Redux-Saga files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Saga/*.saga.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Individual Saga files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Saga/network.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Server Communication logic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Store/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Redux/Redux-toolkit files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Store/*.store.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Individual Store files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Hooks/*.hook.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Custom hooks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Containers/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Every page for the app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Components/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Common components for the whole app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Route/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;All Route setup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Utils/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Common logic throught the whole app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Style/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Style and assests, since create-react-app does not allow files outside src/ to be imported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.env.development&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Development variables, configuring backend, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.env.production&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Development variables but for production&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;time-management&#34;&gt;Time Management&lt;/h2&gt;
&lt;p&gt;I cameback from my break on 22nd this month, Spent the last week of this month for upgrading this react project, Because of that I didn&amp;rsquo;t have time to do other things.&lt;/p&gt;
&lt;h3 id=&#34;next-month-s-schedule&#34;&gt;Next month&amp;rsquo;s schedule&lt;/h3&gt;
&lt;p&gt;I should, get back to work on my Scrum board.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;week 1 &amp;amp; 2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complete the Friend feature, merge it with master branch.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;week 3 &amp;amp; 4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reafactor to use redux-toolkit&lt;/li&gt;
&lt;li&gt;move to redux async handlers&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;note-to-future-self&#34;&gt;Note to future-self&lt;/h2&gt;
&lt;p&gt;Last year, It was trying to forget the month of May, but this year, not so much. Great, Hope this continues.&lt;/p&gt;</description></item><item><title>Firebase-RealtimeDatabase &amp; Self-assesment</title><link>//bluepie.in/2021/03/firebase-realtimedatabase/</link><pubDate>Mon, 29 Mar 2021 19:08:42 +0000</pubDate><guid>//bluepie.in/2021/03/firebase-realtimedatabase/</guid><description>
&lt;p&gt;&lt;em&gt;Hi!, its been a wild month, jumping all over the places, future me reading!, keep your composure.&lt;/em&gt; &lt;strong&gt;Coming to other things, I&amp;rsquo;ve been doing work from home for the past year, but recently (the past 3 months) I was asked to come office atleast a week or two. Although some of my friends are still doing WFM, I had to go chennai, Which I felt was bad, but this is not a major consern.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;time-management-upuntill-now&#34;&gt;Time Management upuntill now&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been managing three different workflows in my life(tech side),&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;office&lt;/li&gt;
&lt;li&gt;hobbies (this is where I maintain my public journal, &lt;strong&gt;posting here&lt;/strong&gt; )&lt;/li&gt;
&lt;li&gt;learning new stuff&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Which often makes me wana take a break from everything(like the one I&amp;rsquo;m about to take, 20-30 days), after an assesment that I made myself, I&amp;rsquo;ve decided its not good for me to continue this way, &lt;em&gt;I am juggling too much things at once&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;time-management-going-forward&#34;&gt;Time management going forward&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;office&lt;/li&gt;
&lt;li&gt;hobbies &amp;amp; learning new stuff (combining hobbies and learning new stuff as a public journal)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;Due to the said change, The jorunal will now contain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Scrum_(software_development)&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Scrum&lt;/a&gt; of hobby &amp;amp; learning projects.&lt;/li&gt;
&lt;li&gt;where did I spent my time (on tech)each month.&lt;/li&gt;
&lt;li&gt;Reverse engineering/Modding/Programming/Competitions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;things-i-have-completed-in-this-month-in-my-freetime&#34;&gt;Things I have completed in this month in my freetime.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;design &amp;amp; implement searching/adding friends in an RN app that I am building.&lt;/li&gt;
&lt;li&gt;create an animation from scratch for RN using RN reanimated.&lt;/li&gt;
&lt;li&gt;restructure RealtimeDatabase to manage follow requests and friends.&lt;/li&gt;
&lt;li&gt;managing firebase rules for differnet roots/refs.&lt;/li&gt;
&lt;li&gt;refactor firebase connection&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;design-and-implement-searching-adding-friends&#34;&gt;design and implement searching/adding friends&lt;/h4&gt;
&lt;p&gt;I took inspiration from twitter and this is how Im panning it out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/march-2021/design.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;creating-an-animation-similar-to-twitter-s-search-and-trending-from-scratch&#34;&gt;creating an animation similar to twitter&amp;rsquo;s search and trending from &lt;strong&gt;&lt;em&gt;scratch&lt;/em&gt;&lt;/strong&gt;.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/watchlist/blob/70e02ba3485dd1b957033ca33c208d10a72482c6/src/Home/Friends/TabbedView.tsx&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;code link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;following the documentation, it was pretty simple to implement.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const translateX = useSharedValue(0);
const scrollHandler = useAnimatedScrollHandler((event) =&amp;gt; {
translateX.value = -event.contentOffset.x;
});
const activeTab = useDerivedValue(() =&amp;gt; interpolate(translateX.value, [0, -wWidth / 2], [0, 1], Extrapolate.CLAMP));
const animatedStyle = useAnimatedStyle(() =&amp;gt; {
return {
transform: [{ translateX: -translateX.value / 2 }],
};
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;above code handles the animation logic, then incorporating this into our style makes it perfect.&lt;/p&gt;
&lt;p&gt;Further tweaking was done just by using the &amp;lsquo;activeTab&amp;rsquo; variable. ex: changing color during animation, etc.&lt;/p&gt;
&lt;h5 id=&#34;restructuring-firebase-rules&#34;&gt;restructuring firebase &amp;amp; rules.&lt;/h5&gt;
&lt;h6 id=&#34;structuring&#34;&gt;structuring&lt;/h6&gt;
&lt;p&gt;My initial design holds up pretty good since I already had an experience. I only had to design the new data to store in exisiting structure.&lt;/p&gt;
&lt;p&gt;my hypothetical design looks like below(for extending existing to add feature friends)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;users/user[]
user:{
..details,
friends:friend[]
}
frind{
status: requeststed/accepted
friendssince: accpeted date
userid: from userid in the given list
}
users/friends/frind[]
users-list:{
user:
profile:
email:
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I avoided creating a new api, &amp;amp; preferred to use workaround in firebase, cuz it would have consumed a lot of my time in backend.&lt;/p&gt;
&lt;p&gt;This &lt;a href=&#34;https://firebase.google.com/docs/database/web/structure-data&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;article was greatly helpful in making decisions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;bellow exchange pretty much sums it up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/march-2021/firebase-scenario.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h6 id=&#34;rules&#34;&gt;rules&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;any logged in user can access &amp;lsquo;new-ref&amp;rsquo;&lt;/li&gt;
&lt;li&gt;only owner of the uid can access the uid and its properties&lt;/li&gt;
&lt;li&gt;&lt;p&gt;any logged in user can access another-ref, (this is based on above article)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&amp;quot;ref&amp;quot;:{
&amp;quot;$uid&amp;quot;: {
&amp;quot;.read&amp;quot;: &amp;quot;auth.uid != null &amp;amp;&amp;amp; auth.uid == $uid&amp;quot;,
&amp;quot;.write&amp;quot;: &amp;quot;auth.uid != null &amp;amp;&amp;amp; auth.uid == $uid&amp;quot;,
&amp;quot;new-ref&amp;quot;: {
&amp;quot;.read&amp;quot;: &amp;quot;auth.uid != null&amp;quot;,
&amp;quot;.write&amp;quot;: &amp;quot;auth.uid != null&amp;quot;
}
}
},
&amp;quot;another-ref&amp;quot;: {
&amp;quot;.read&amp;quot;: &amp;quot;auth.uid != null&amp;quot;,
&amp;quot;.write&amp;quot;: &amp;quot;auth.uid != null&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;refactoring-firebase&#34;&gt;Refactoring Firebase&lt;/h4&gt;
&lt;p&gt;Since the RN app was getting bigger, It was time for refactoring the firebase part.&lt;/p&gt;
&lt;p&gt;from /root/Firebase.ts(single file) to following folder strucutre,&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;folder&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;root&lt;/td&gt;
&lt;td&gt;root directory contents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/login.ts&lt;/td&gt;
&lt;td&gt;curd operations post login&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/friends.ts&lt;/td&gt;
&lt;td&gt;crud operatios for people realted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/movie.ts&lt;/td&gt;
&lt;td&gt;crud operations for movie related&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/index.ts&lt;/td&gt;
&lt;td&gt;exports in a single file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;etc&lt;/td&gt;
&lt;td&gt;other&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/watchlist/tree/70e02ba3485dd1b957033ca33c208d10a72482c6/src/Firebase&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Link to code/files&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I planned to take a break, ill update on it next month. untill then seeya. tc &amp;lt;3.&lt;/p&gt;</description></item><item><title>Express Api Server</title><link>//bluepie.in/2021/02/express-api-server/</link><pubDate>Sun, 21 Feb 2021 10:54:20 +0000</pubDate><guid>//bluepie.in/2021/02/express-api-server/</guid><description>
&lt;p&gt;After a hectic past two months, hope I get some free time in the upcomming months.&lt;/p&gt;
&lt;h2 id=&#34;what-is-this&#34;&gt;What is this?&lt;/h2&gt;
&lt;p&gt;This is a backend, written for one of my projects. &lt;em&gt;This was originally developed to be a private repository, I made it public this month.&lt;/em&gt; And this was my first time using typescript 100 percent for backend, my experience with it is pretty cool.&lt;/p&gt;
&lt;h2 id=&#34;stack&#34;&gt;Stack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;express server&lt;/li&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;pm manager&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;framework&#34;&gt;Framework&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;model&lt;/li&gt;
&lt;li&gt;view&lt;/li&gt;
&lt;li&gt;controller&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;folder-structure&#34;&gt;Folder structure&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Source files of the server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/public&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Static files to be used on client side&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/models&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Storing and retrieving datails from different schema, not using mongoose models&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/controllers&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Controllers define functions that respond to various http requests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;/server.ts&lt;/td&gt;
&lt;td&gt;Entry point for the app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/util/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;helpers - logging, cache, ratelimit, database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;test&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Test cases to perform before taking a new build, is also used in combination with github actions before merging the code to master branch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;views&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Template files for rendering dynamic content to client side, since this is a api server, there is not much there in this folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.env.example&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;repos.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.github&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;CI - github actions - run test cases on pull request and report if it is safe to merge.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cache&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Cache folder for responses that do not need to connect to database all the time.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;explore-the-code-in-github&#34;&gt;Explore the code in github&lt;/h3&gt;
&lt;p&gt;Repository Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/watchlist-backend&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/aghontpi/watchlist-backend&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;misc&#34;&gt;Misc&lt;/h3&gt;
&lt;h4 id=&#34;a-cool-library-that-i-found-useful-for-testing-api&#34;&gt;A cool library that I found useful for testing api&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/supertest&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;supertest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;see the code examples below, &lt;a href=&#34;https://github.com/aghontpi/watchlist-backend/blob/104b3b1b53850c626f557a1936a68ce5bd0aa121/test/api.test.ts&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to source file&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;# testing routing redirect
describe(&#39;GET /asdfd/askf&#39;, () =&amp;gt; {
it(&#39;should return redirect&#39;, (done) =&amp;gt; {
request(app).get(&#39;/random&#39;).expect(302, done);
});
});
# testing api endpoint
describe(&#39;GET /top&#39;, () =&amp;gt; {
it(&#39;should return type json with 200 OK&#39;, (done) =&amp;gt; {
request(app).get(&#39;/top&#39;).expect(&#39;Content-Type&#39;, /json/).expect(200, done);
});
});
# testing rate limiting
describe(&#39;GET /top&#39;, () =&amp;gt; {
const req = request.agent(app);
it(&#39;shoult not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should &amp;quot;be ratelimited&amp;quot;&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(429, done);
});
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;merging-pull-requests-automatically-run-tests-on-bug-fixes-and-new-features&#34;&gt;Merging pull requests, automatically run tests on bug fixes and new features.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/express-api-server/pull-request-merge-after-build-success.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;nginx-config-used-for-deploying&#34;&gt;Nginx config used for deploying&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/express-api-server/nginx-config-for-express-server.png&#34; alt=&#34;nginx config&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;pm2-managing-the-api&#34;&gt;pm2 managing the api&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/express-api-server/running-the-server-in-production.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;Hope this motivates my futureself in someway, keep learning and reach milestones constantly.&lt;/p&gt;</description></item><item><title>Preconfigured Binary and Installer script through Docker</title><link>//bluepie.in/2021/01/preconfigured-binary-using-docker/</link><pubDate>Fri, 29 Jan 2021 08:23:06 +0530</pubDate><guid>//bluepie.in/2021/01/preconfigured-binary-using-docker/</guid><description>
&lt;p&gt;How&amp;rsquo;s it going, good I hope!, Hope this year is a blast for you.&lt;/p&gt;
&lt;h2 id=&#34;what-is-this&#34;&gt;What is this?&lt;/h2&gt;
&lt;p&gt;Creating a preconfigured container for a precompiled binary utilizing docker.&lt;/p&gt;
&lt;h2 id=&#34;reason-motivation&#34;&gt;Reason / Motivation:&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been using hugo, even since my blog migration post, the one problem that I am facing with hugo is that,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;whenever I run update os host system,hugo version also updates, the problem with that is some features are deprecated in the new release, my site design depends upon those features. so what I was doing is constantly degrading the hugo version back to old version, before I write a post everytime.&lt;/li&gt;
&lt;li&gt;I work in new environments all the time, so downloading the appropriate version and installing takes time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;goal&#34;&gt;goal&lt;/h2&gt;
&lt;p&gt;At the end of this venture, I should be able to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a image from scratch&lt;/li&gt;
&lt;li&gt;install a required binary with its dependencies, either using source or binary distribution&lt;/li&gt;
&lt;li&gt;create a container from the image and export it&lt;/li&gt;
&lt;li&gt;upload the container image to a docker hub or something similar&lt;/li&gt;
&lt;li&gt;setup an environment using the container&lt;/li&gt;
&lt;li&gt;link the local binary executable to the binary inside the container
&lt;ul&gt;
&lt;li&gt;whenever I run the binary locally, the binary inside the container should be executed on the files
from the host system&amp;rsquo;s current path.&lt;/li&gt;
&lt;li&gt;I should be able to run the binary, with or without its parameters and environment options&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;is-this-even-possible&#34;&gt;Is this even possible?&lt;/h2&gt;
&lt;p&gt;what I am trying to achieve is completely possible using docker, its a feature completely baked into the docker core,
using &amp;lsquo;&amp;ndash;rm&amp;rsquo; with &amp;lsquo;docker -run&amp;rsquo;&lt;/p&gt;
&lt;h2 id=&#34;lets-start&#34;&gt;Lets start&lt;/h2&gt;
&lt;h3 id=&#34;choosing-the-best-base-image-i-recommend-alpine-https-hub-docker-com-alpine&#34;&gt;Choosing the best base image, I recommend &lt;a href=&#34;https://hub.docker.com/_/alpine/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;alpine&lt;/a&gt;.&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;why?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Alpine Linux is a Linux distribution built around musl libc and BusyBox. The &lt;strong&gt;&lt;em&gt;&lt;em&gt;image is only 5 MB&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt; in size and &lt;strong&gt;&lt;em&gt;&lt;em&gt;has access to a package repository&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;set-up-a-container-from-alpine&#34;&gt;Set up a container from alpine&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
aghontpi@elitebook:~$ docker run --name testalpine -d -it alpine:latest /bin/sh
1be3fb1ba1c46786dc5034745dcdab31c6588627c086c08f3c0ff8493d270544
aghontpi@elitebook:~$ docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
1be3fb1ba1c4 alpine:latest &amp;quot;/bin/sh&amp;quot; 4 seconds ago Up 3 seconds testalpine
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;login-to-the-shell-to-install-your-binary&#34;&gt;Login to the shell to install your binary&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;aghontpi@elitebook:~$ docker exec -it testalpine /bin/sh
/ # whoami
root
/ # apk update
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/community/x86_64/APKINDEX.tar.gz
v3.13.2-8-g7bb1c88019 [https://dl-cdn.alpinelinux.org/alpine/v3.13/main]
v3.13.2-9-gd3529c068e [https://dl-cdn.alpinelinux.org/alpine/v3.13/community]
OK: 13884 distinct packages available
/ # apk list vim
vim-8.2.2320-r0 x86_64 {vim} (Vim)
/ # apk add --no-cache vim
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/community/x86_64/APKINDEX.tar.gz
(1/5) Installing xxd (8.2.2320-r0)
(2/5) Installing lua5.3-libs (5.3.6-r0)
(3/5) Installing ncurses-terminfo-base (6.2_p20210109-r0)
(4/5) Installing ncurses-libs (6.2_p20210109-r0)
(5/5) Installing vim (8.2.2320-r0)
Executing busybox-1.32.1-r0.trigger
OK: 25 MiB in 19 packages
/ # vim test
/ # cd home
/home # wget https://github.com/gohugoio/hugo/releases/download/v0.56.3/hugo_0.56.3_Linux-64bit.tar.gz
Connecting to github.com (13.234.210.38:443)
Connecting to github-releases.githubusercontent.com (185.199.108.154:443)
saving to &#39;hugo_0.56.3_Linux-64bit.tar.gz&#39;
hugo_0.56.3_Linux-64 100% |*********************************************************************************************************************************************************************************************************************************| 11.4M 0:00:00 ETA
&#39;hugo_0.56.3_Linux-64bit.tar.gz&#39; saved
/home # ls
hugo_0.56.3_Linux-64bit.tar.gz
/home # tar -xf hugo_0.56.3_Linux-64bit.tar.gz
/home # ls
LICENSE README.md hugo hugo_0.56.3_Linux-64bit.tar.gz
/home # cp hugo /usr/bin/
/home # mkdir test
/home # cd test/hugo
/home # ls
LICENSE README.md hugo hugo_0.56.3_Linux-64bit.tar.gz test
/home # cd test/
/home/test # hugo
Building sites … WARN 2021/02/19 16:52:24 found no layout file for &amp;quot;HTML&amp;quot; for &amp;quot;taxonomyTerm&amp;quot;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination.
WARN 2021/02/19 16:52:24 found no layout file for &amp;quot;HTML&amp;quot; for &amp;quot;home&amp;quot;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination.
WARN 2021/02/19 16:52:24 found no layout file for &amp;quot;HTML&amp;quot; for &amp;quot;taxonomyTerm&amp;quot;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination.
| EN
+------------------+----+
Pages | 3
Paginator pages | 0
Non-page files | 0
Static files | 0
Processed images | 0
Aliases | 0
Sitemaps | 1
Cleaned | 0
Total in 4 ms
/home/test # ls
public resources
/home/test # cd ..
/home # ls
LICENSE README.md hugo hugo_0.56.3_Linux-64bit.tar.gz test
/home # rm -rf ./*
/home # exit
aghontpi@elitebook:~$
aghontpi@elitebook:~$ docker container stop testalpine
testalpine
aghontpi@elitebook:~$ docker commit testalpine testalpinewithhugo/0.1
sha256:c305edf7f82a912801ae44dfe6ffe9e834e0541728295c2968ef69ad2ba9e90f
aghontpi@elitebook:~$ docker image ls testalpinewithhugo/0.1
REPOSITORY TAG IMAGE ID CREATED SIZE
testalpinewithhugo/0.1 latest c305edf7f82a 14 seconds ago 60.1MB
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;host-the-image-remotely-in-a-service-of-your-choice&#34;&gt;Host the image remotely in a service of your choice.&lt;/h3&gt;
&lt;p&gt;Then use services like &lt;a href=&#34;https://hub.docker.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;docker-hub&lt;/a&gt; to your private repo, it will look like below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/preconfigured-binary-using-docker/docker-container-export-and-upload-to-docker-hub.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;shell-script-to-orchestrate-the-whole-thing&#34;&gt;Shell script to orchestrate the whole thing.&lt;/h3&gt;
&lt;p&gt;Didn&amp;rsquo;t want to brushup my sheel script so wrote a python script and used it as executable instead.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/aghontpi/8271dc0f28c2c844ae2a0d1e03c70bf5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to the following code&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#! /usr/bin/python3
import os
calling_directory = os.getcwd()
cmd = f&amp;quot;docker run --rm -it \
--user $(id -u):$(id -g) \
-v &#39;/etc/group:/etc/group:ro&#39; \
-v &#39;/etc/passwd:/etc/passwd:ro&#39; \
-v &#39;/etc/shadow:/etc/shadow:ro&#39;
-v {calling_directory}/:/tmp/ \
-e HUGO_ENV \
-p 80:1313 \
bluepie/hugo:0.1 \
/bin/sh -c &#39;cd /tmp/ &amp;amp;&amp;amp; hugo &amp;quot; + &#39; &#39;.join(sys.argv[1:]) +&amp;quot; &#39;&amp;quot;
print(cmd)
os.system(cmd)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;finally-installation-script&#34;&gt;Finally Installation script&lt;/h3&gt;
&lt;p&gt;The code is verbose, so check it out through the link.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/aghontpi/a9f160d80923823757a9894caf37aba7&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to installation script&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;what the script does..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check if hugo and docker is already installed&lt;/li&gt;
&lt;li&gt;create .bin directory inside $HOME&lt;/li&gt;
&lt;li&gt;downloads the &lt;a href=&#34;https://gist.github.com/aghontpi/8271dc0f28c2c844ae2a0d1e03c70bf5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;code&lt;/a&gt; and places it as executable inside $HOME/.bin/hugo&lt;/li&gt;
&lt;li&gt;adds the path $HOME/.bin to .bashrc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;script-in-action&#34;&gt;Script in action&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
aghontpi@elitebook:/tmp$ ./install-script.py
&amp;gt; docker-hugo custom binary script v0.0.1
&amp;gt; docker is installed proceeding..
&amp;gt; hugo does not exists, initiating docker pull and installation
&amp;gt; authenticating /w docker, enter credential when asked
Authenticating with existing credentials...
WARNING! Your password will be stored unencrypted in /home/aghontpi/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store
Login Succeeded
&amp;gt; pulling from docker repo
0.1: Pulling from bluepie/hugo
Digest: sha256:db54d94cfb7ad12726b1ee9f5fa7b2a2ad9d7e567021886fe2dd74e4262a43ea
Status: Image is up to date for bluepie/hugo:0.1
docker.io/bluepie/hugo:0.1
&amp;gt; getting the custom script
&amp;gt; writing to disc
&amp;gt; setting permission
&amp;gt; backup cmd -&amp;gt; cp /home/aghontpi/.bashrc /home/aghontpi/.bashrc_bkp_19022021-21:20:15
&amp;gt; modifying bashrc of user
&amp;gt; installation complete
---&amp;gt; use a new terminal to test &amp;lt;---
aghontpi@elitebook:/tmp$
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I learned a lot through this little experiment, It saves a ton of my time.&lt;/p&gt;</description></item><item><title>AdventOfCode-2020</title><link>//bluepie.in/2020/12/adventofcode-2020/</link><pubDate>Tue, 29 Dec 2020 23:02:55 +0530</pubDate><guid>//bluepie.in/2020/12/adventofcode-2020/</guid><description>
&lt;blockquote&gt;
&lt;p&gt;This month was quite interesting, I stopped all developemt (except office work, which is still sad, imo I should have taken a break from that too) and focused my attention towards coding challenges, by newyear have to go chennai for resuming my work life, the timing for it was the worst.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;what-is-advent-of-code&#34;&gt;what is advent of code?&lt;/h2&gt;
&lt;p&gt;AOC is a series of programming challenges, two problems unlock each day, till christmas, i.e untill dec 25th.&lt;/p&gt;
&lt;h2 id=&#34;what-i-gained&#34;&gt;what I gained?&lt;/h2&gt;
&lt;p&gt;algorithms, datastructures, problem solving concepts, programming concepts and mainly it was fun and helped me take my mind off things.&lt;/p&gt;
&lt;h2 id=&#34;questions-and-solutions&#34;&gt;Questions and Solutions.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/AdventOfCode2020&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Check the repo for questions and solutions.&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Publishing Npm Package</title><link>//bluepie.in/2020/11/publishing-npm-package/</link><pubDate>Mon, 30 Nov 2020 11:47:43 +0530</pubDate><guid>//bluepie.in/2020/11/publishing-npm-package/</guid><description>
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Personal Update: I finally managed to change my github username with all its dependencies to aghontpi, it was less work than I expected. Gosh, Its been 6 months already..since I decided to change my username. Incase my future self is wondering, its still work from home, probablly will go chennai after new years&amp;rsquo; i.e 2021.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;This month was boring as hell in terms of office work, since I had to work on Extjs, I introduced some flare into it, but making it similar to react, because of this, it much easier to work on.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The more important stuff - Learnt to publish a package in npm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;backstory&#34;&gt;Backstory&lt;/h2&gt;
&lt;p&gt;So I wanted to do this for almost a year, I never got around it, main reason being, the other person who&amp;rsquo;s collaborating leaving. One of my colleagues &amp;amp; a good friend of mine asked if we could do any open-source projects, this was after he just demonstrated a angular componenet that he was building. It looked cool, So I told him Why not publish this?.
So that is what we did, but decided to do it for react and publish it to npm.&lt;/p&gt;
&lt;h2 id=&#34;reason-goal&#34;&gt;Reason/Goal&lt;/h2&gt;
&lt;p&gt;I wanted to learn, what are the steps necessary to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;publish to npm,&lt;/li&gt;
&lt;li&gt;convert a component so that it can be published,&lt;/li&gt;
&lt;li&gt;generate build
&lt;ul&gt;
&lt;li&gt;compiling typescript with types file&lt;/li&gt;
&lt;li&gt;bundle the whole library as package&lt;/li&gt;
&lt;li&gt;comparing webpack, lerna, rollup, etc.
and lastly&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;just for the fun of it&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-idea&#34;&gt;The idea&lt;/h2&gt;
&lt;p&gt;The idea is Table, the logic and functionality was all handled by my friend, I took care of remaining things. left the use cases for him to handle.&lt;/p&gt;
&lt;h2 id=&#34;so-what-i-learnt&#34;&gt;So what I learnt?&lt;/h2&gt;
&lt;h3 id=&#34;bundling&#34;&gt;Bundling&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;em&gt;Removing react-scripts to custom scripts&lt;/em&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After some re-search found react-scripts was good, but not suitable for a libaray. so went ahead with just using babel,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rimraf lib/ &amp;amp;&amp;amp; babel src -d lib/
rimraf lib/ &amp;amp;&amp;amp; babel src --watch -d lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;.babelrc.js&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = {
presets: [
[
&amp;quot;@babel/preset-react&amp;quot;,
{
development: process.env.BABEL_ENV === &amp;quot;development&amp;quot;,
},
&amp;quot;@babel/preset-env&amp;quot;,
],
],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;but babel can not bundle/compile css files, which was used in out project, so researched further on bundlers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;moving to webpack&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The final decision came down to choosing between rollup and webpack. rollup was new to me, webpack, I already had experience with.. &amp;amp; my requirements was pretty simple, bundle files to /lib/index.js.
So went ahead with just using webpack.&lt;/p&gt;
&lt;p&gt;processing in webpack&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rimraf lib/ &amp;amp;&amp;amp; webpack
rimraf lib/ &amp;amp;&amp;amp; webpack --env mode=dev --watch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;webpack.config.js&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const path = require(&amp;quot;path&amp;quot;)
const includeFolder = path.resolve(__dirname, &amp;quot;src&amp;quot;)
const outputFolder = path.resolve(__dirname, &amp;quot;lib&amp;quot;)
module.exports = (env, argv) =&amp;gt; {
const mode = env ? (env.mode == &amp;quot;dev&amp;quot; ? &amp;quot;development&amp;quot; : &amp;quot;production&amp;quot;) : &amp;quot;production&amp;quot;
console.log(`running in ${mode} mode`)
return {
entry: &amp;quot;./src/Index.tsx&amp;quot;,
mode,
output: {
filename: &amp;quot;index.js&amp;quot;,
path: outputFolder,
library: &amp;quot;dynamic-table-react&amp;quot;,
libraryTarget: &amp;quot;umd&amp;quot;,
},
module: {
rules: [
{ //process css files
test: /\.css$/i,
include: includeFolder,
use: [&amp;quot;style-loader&amp;quot;, &amp;quot;css-loader&amp;quot;],
},
{
// process js and ts files
test: /\.(js|mjs|jsx|ts|tsx)$/,
include: includeFolder,
use: {
loader: &amp;quot;babel-loader&amp;quot;,
},
},
],
},
externals: {
react: &amp;quot;react&amp;quot;,
&amp;quot;react-dom&amp;quot;: &amp;quot;react-dom&amp;quot;,
},
resolve: {
extensions: [&amp;quot;.js&amp;quot;, &amp;quot;.jsx&amp;quot;, &amp;quot;.ts&amp;quot;, &amp;quot;.tsx&amp;quot;],
},
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;renamed .babelrc.js to .babelrc&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// using preset to process react and typescript files
{
&amp;quot;presets&amp;quot;: [&amp;quot;@babel/preset-env&amp;quot;, &amp;quot;@babel/preset-react&amp;quot;, &amp;quot;@babel/preset-typescript&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;genrating-types-file&#34;&gt;Genrating Types file&lt;/h3&gt;
&lt;p&gt;generating types file .d.ts was soo much pain, bacause webpack could not do it, (at least at the time of writing this).&lt;/p&gt;
&lt;p&gt;tsc could do it, but it needs tsconfig.json and also I would have to include it as seperate script in package.json, This is where I thought I should have went with rollup or tsdx.&lt;/p&gt;
&lt;p&gt;I have not yet added this to the package, still experimenting on stuff, Will update this once I complete that part.&lt;/p&gt;
&lt;h3 id=&#34;structuring-package-json&#34;&gt;structuring package.json&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;em&gt;Stuff to configure in package.json, importantly main, scripts, types file, peer dependencies.&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
...,
&amp;quot;main&amp;quot;: &amp;quot;lib/index.js&amp;quot;,Removing react-scripts to custom scripts
&amp;quot;peerDependencies&amp;quot;: {
&amp;quot;react&amp;quot;: &amp;quot;^x.x.x&amp;quot;,
&amp;quot;react-dom&amp;quot;: &amp;quot;^x.x.x&amp;quot;
},
&amp;quot;scripts&amp;quot;: {
&amp;quot;build&amp;quot;: &amp;quot;rimraf lib &amp;amp;&amp;amp; webpack&amp;quot;,
&amp;quot;start&amp;quot;: &amp;quot;rimraf lib/ &amp;amp;&amp;amp; webpack --env mode=dev --watch&amp;quot;
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;since we added react to be a &lt;a href=&#34;https://nodejs.org/en/blog/npm/peer-dependencies/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;peer-dependency&lt;/a&gt;, we oughta add following to webpack config.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;
externals: {
&amp;quot;react&amp;quot;: &amp;quot;react&amp;quot;,
&amp;quot;react-dom&amp;quot;: &amp;quot;react-dom&amp;quot;,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;other-minor-stuff&#34;&gt;Other minor stuff&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;building and publishing commands with npm/yarn&lt;/li&gt;
&lt;li&gt;using yarn link/ npm link while developing&lt;/li&gt;
&lt;li&gt;maintain packages in npmjs (admin setting for package)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;conclusion.&lt;/h2&gt;
&lt;p&gt;It was fun learning, creating and publishing the package. The link to the &lt;a href=&#34;https://www.npmjs.com/package/dynamic-table-react&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;package&lt;/a&gt;. untill next time -aghontpi.&lt;/p&gt;</description></item><item><title>Why I Choose Typescript</title><link>//bluepie.in/2020/10/why-i-choose-typescript/</link><pubDate>Thu, 29 Oct 2020 21:34:18 +0530</pubDate><guid>//bluepie.in/2020/10/why-i-choose-typescript/</guid><description>
&lt;p&gt;Hello, we meet again!, how was the week? hope you are well and gud!, This post will be about typescript, I&amp;rsquo;m not explaining what it is, but rather why i choose to use it.&lt;/p&gt;
&lt;h2 id=&#34;typescript-was-everywhere-background&#34;&gt;TypeScript was everywhere - background&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;First of all, I want to clear some air by opening up, &lt;em&gt;In in past, I hated typescript with a passion&lt;/em&gt;, Since then I&amp;rsquo;ve grown a lot as a person, lol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Typescript was the new kid in the block, soo much hype was around it, stackoverflow surveys did not help either since it had typescript ranked top in their survey.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been a fan of &lt;a href=&#34;https://www.freecodecamp.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;codecamp&amp;rsquo;s&lt;/a&gt; work, they do useful stuff for the community,&lt;/p&gt;
&lt;p&gt;To my suprise they announced &lt;a href=&#34;https://twitter.com/ossia/status/1183845054449930241?s=20&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;this on twitter&lt;/a&gt;, I&amp;rsquo;ve been following their project - &lt;a href=&#34;https://github.com/freeCodeCamp/chapter&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;chapter&lt;/a&gt;, from then. After a month into development they migrated to typescript from javascript, there is an entire debate on their discord and github, but more importantly I was pissed because of this decision.&lt;/p&gt;
&lt;p&gt;Ever since they changed the project to use typescript, gradually I started to reason and see-past my hate-wall (because of the respect I have for them). But I was not ready to try it out though, So a month later, I worked on a angular project, I learned basic typescipt(1% - 8%) to complete the project, was still writing javascript code everywhere, I was the &amp;ldquo;any&amp;rdquo; guy, if you know what I mean.&lt;/p&gt;
&lt;h2 id=&#34;javascript-my-experience&#34;&gt;Javascript - my experience&lt;/h2&gt;
&lt;p&gt;After the angular project, I did a few projects in React &lt;a href=&#34;https://bluepie.in/2020/07/rinku/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;rinku&lt;/a&gt;, &lt;a href=&#34;https://bluepie.in/2020/09/gatsby-experiment/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;with gatsby&lt;/a&gt; to name a few, I did the entire thing in javascript. From my experience, when the codebase grew along with the files, some issues I faced were,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Trying to remember object properties, function properties, etc, avoidable bcoz of autocompletion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;every so-often you are searching through the entire project, either by using find in files/grep.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Facing errors that could be avoidable by typesafety and static analysis, spending a ton of time debugging and fixing it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lack of easy peek into method signatures of third party libraries.`&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintaining seperate documentation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;It should be noted that I&amp;rsquo;m adding this on top of es-lint and prettier.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;solution-reasons-for-using-typescript&#34;&gt;Solution - reasons for using Typescript&lt;/h2&gt;
&lt;p&gt;So naturally when I was starting a new project, I choose typescript as the result of my previous experience, I striclty enable &lt;a href=&#34;https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-explicit-any.md&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;no-explicit-any&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before proceeding below, it should be noted you wont get any of the benefits if they aren&amp;rsquo;t initialized with types.&lt;/p&gt;
&lt;p&gt;ex:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;
interface ApiItemProps {
...
}
const [api, setApi] = useState&amp;lt;ApiItemProps[] | null&amp;gt;(null);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;What I get with typescript?&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;autocomplete&#34;&gt;Autocomplete&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/autocomplete-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/autocomplete-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;library-definition&#34;&gt;Library definition&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/library-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/library-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;type-checking-for-parameters&#34;&gt;Type checking for parameters&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/typing-passed-params-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/typechecking-passed-params.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;customtypes-etc-for-comfort&#34;&gt;Customtypes, etc.. for comfort&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-3.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-4.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-5.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;static-analysis&#34;&gt;Static analysis&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/static-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/static-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;typing-api-responses-implemented-with-awesome-library-quicktype-https-github-com-quicktype-quicktype&#34;&gt;Typing api responses - implemented with awesome library &lt;a href=&#34;https://github.com/quicktype/quicktype&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;quicktype&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/typing-api.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;advanced-features-of-typescript&#34;&gt;Advanced features of typescript,&lt;/h2&gt;
&lt;p&gt;To achieve the best experience, typescript offers &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/advanced-types.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;advanced&lt;/a&gt;, &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/utility-types.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;unity&lt;/a&gt; and &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;much more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;an example for unity and how I use it.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;interface ListItemProps {
onPress: () =&amp;gt; void;
id: string;
name: string;
color: keyof theme[&#39;colors&#39;];
}
type MenuItemProps = Omit&amp;lt;ListItemProps, &#39;onPress&#39;&amp;gt;;
interface FlatListRenderProps {
item: MenuItemProps;
index: number;
}
const [list, setFlatList] = useState&amp;lt;FlatListRenderProps[] | null&amp;gt;(null);
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;For more &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;official handbook&lt;/a&gt;, explains a lot better than me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m just starting to adapt typescript in my javascript workflow, this is the begining phase, obviously there is much more to learn. Bye, See ya soon - Gopinath.&lt;/p&gt;</description></item><item><title>Gatsby Experiment</title><link>//bluepie.in/2020/09/gatsby-experiment/</link><pubDate>Wed, 30 Sep 2020 22:26:17 +0530</pubDate><guid>//bluepie.in/2020/09/gatsby-experiment/</guid><description>
&lt;p&gt;&lt;em&gt;Hi, how did the day go?, what about the week? what about the month?, Good I hope!. Personal update: I almost bought a guitar, But then I realised something and stopped, the decision correct or wrong? the future holds the truth, hope you got the answer with you! future me reading this.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pew!&amp;hellip; I almost did not post this month, although I completed the project/experiment in the middle of the month. I&amp;rsquo;ve been learning a new tech stack offtime and working on a project, more on this on a future post.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;goal&#34;&gt;Goal&lt;/h2&gt;
&lt;p&gt;To learn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Gatsby&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;its workflow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Its seo capabilities, since seo is non existent with client side rendering.(react)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GraphQL&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I had my eye on Gatsby for a while now, ever since one of my friends mentioned it, I wanted to see what it had to offer.&lt;/p&gt;
&lt;h2 id=&#34;so-what-to-build-with-gatsby&#34;&gt;so what to build with gatsby ?&lt;/h2&gt;
&lt;p&gt;I thought designing a landing page might be a good experiment to do with Gatsby, but did the landing page really had to have Gatsby? Absolutely no, It could have been easily be built by html, css and javascript.&lt;/p&gt;
&lt;p&gt;Key advantages of gatsby.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Static sites /w React&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SEO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GraphQL&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;workflow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;plugin support&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have not used SSR particulary with Gatsby, So my thoughts on it is 0.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSR&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;would-i-recomment-it-to-anyone&#34;&gt;Would I recomment it to anyone?&lt;/h2&gt;
&lt;p&gt;Of course, If they already know react. but for a beginners I would not recommend it, especially if they had time constraint to finish the project.&lt;/p&gt;
&lt;p&gt;well.. check it out &lt;a href=&#34;https://poojabags.netlify.app&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bye, seeya, untill next-time - Gopinath.&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>Birthday month! - reflection and future</title><link>//bluepie.in/2020/08/future/</link><pubDate>Fri, 28 Aug 2020 19:41:47 +0530</pubDate><guid>//bluepie.in/2020/08/future/</guid><description>
&lt;p&gt;&lt;em&gt;Hello, how are you doing, I&amp;rsquo;m fine thank you, hope you and your loved ones are doing fine.&lt;/em&gt; It&amp;rsquo;s the end of august and covid is still plowing through every city in India, Most of the people are just sitting sulking. What about Me? Im just&amp;hellip;ah, I have a dilema, its just that I don&amp;rsquo;t have a freaking clue what the future holds, Today I go &amp;lsquo;age += 1&amp;rsquo;/ or level up and here is this months review.&lt;/p&gt;
&lt;p&gt;This month is all over the place from begining to end, but think I&amp;rsquo;ve learned some things here and there.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;tech-stuff&#34;&gt;Tech stuff&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This month I got the chance to work on some nice tools like burp, nessus and zap. Along with the oppurtunity to learn to configuring headers in the server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;the-comparison-is-stricly-based-on-web-applications-burp-pro-vs-nessus-trial-vs-zap&#34;&gt;&lt;em&gt;THE COMPARISON IS STRICLY BASED ON WEB APPLICATIONS, BURP PRO VS nessus trial VS ZAP.&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;Burp is pretty awesome, if you have pro, then you&amp;rsquo;ve chosen the right one.&lt;/p&gt;
&lt;p&gt;Advantages of using burp:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Its popular, atleast at the time of writing this, If you have any doubt in anything, you can find it using the n number of resources available online.&lt;/li&gt;
&lt;li&gt;Easy to use.&lt;/li&gt;
&lt;li&gt;Has community version.&lt;/li&gt;
&lt;li&gt;Has ton of awsome extensions.&lt;/li&gt;
&lt;li&gt;Easy to write extensions (extension support in python and java.). Even I wrote one, maybe I will post It in the future.&lt;/li&gt;
&lt;li&gt;Reports.&lt;/li&gt;
&lt;li&gt;Everything just works.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pro costs money,&lt;/li&gt;
&lt;li&gt;Some minor things can&amp;rsquo;t be done without writing own extension or a lot of research.for ex: I needed to add a particular header to map the entire site(discover).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ZAP:&lt;/p&gt;
&lt;p&gt;Comparing ZAP and BURP is not okey, because they both are used for different purpose.&lt;/p&gt;
&lt;p&gt;Advantages of burp.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Easy to do a scan.&lt;/li&gt;
&lt;li&gt;implemented with selenium.&lt;/li&gt;
&lt;li&gt;reports.&lt;/li&gt;
&lt;li&gt;plugins support.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Buggy, lags. (maybe its just me, could not work on it for 15 minutes straight, crashes, freezes.)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;nessus:&lt;/p&gt;
&lt;p&gt;keep in mind (this is based on web application scanning)&lt;/p&gt;
&lt;p&gt;Comparing nessus to above is a joke, its way too costly, all the things that can be done via nessus can be done with open source alternatives, the only thing you get using nessus is convenience, if you have a ton of money to throw away or if you want immediate scan
results, nessus is the thing to go.&lt;/p&gt;
&lt;p&gt;pros:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;you dont have to have indepth knowledge in concepts.&lt;/li&gt;
&lt;li&gt;Does everything for you in a few clicks.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cost&lt;/li&gt;
&lt;li&gt;their &amp;lsquo;WAS&amp;rsquo; package costs 3 lakhs, I mean why&amp;hellip; (all the vulnerabilities/reports this thing finds can be found in open source alternatives.)&lt;/li&gt;
&lt;li&gt;Initial Installation time is way too long, compilation too slow, Im impatient.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;headers&#34;&gt;HEADERS:&lt;/h5&gt;
&lt;p&gt;If the website is taken over by some javascript vulnerability then the first line of defence is just headers&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;by not allowing access of cookies to other sites,&lt;/li&gt;
&lt;li&gt;by making cookie not accessible to javascript,&lt;/li&gt;
&lt;li&gt;by transporting cookies only through https,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;with response flags&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;secure flag&lt;/li&gt;
&lt;li&gt;samesite flag&lt;/li&gt;
&lt;li&gt;http flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sample cookie from facebook.com&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;
set-cookie:
sb=T8pJXwjf4x51HdF-qqumtNHT; expires=Mon, 29-Aug-2022 03:23:59 GMT; Max-Age=63072000; path=/; domain=.facebook.com;
secure;
httponly;
SameSite=None
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Second line of defence would by Content Security Policy&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;CSP - Tells how javascript and css are included in the browser and executed, (xss). A good way is to check with &lt;a href=&#34;https://csp-evaluator.withgoogle.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;csp evaluator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;a sample from &lt;a href=&#34;https://facebook.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;facebook&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;
content-security-policy:
default-src * data: blob: &#39;self&#39;;
script-src *.facebook.com *.fbcdn.net *.facebook.net *.google-analytics.com *.virtualearth.net *.google.com 127.0.0.1:* *.spotilocal.com:* &#39;unsafe-inline&#39; &#39;unsafe-eval&#39; blob: data: &#39;self&#39;;
style-src data: blob: &#39;unsafe-inline&#39; *;connect-src *.facebook.com facebook.com *.fbcdn.net *.facebook.net *.spotilocal.com:* wss://*.facebook.com:* https://fb.scanandcleanlocal.com:* attachment.fbsbx.com ws://localhost:* blob: *.cdninstagram.com &#39;self&#39;;block-all-mixed-content;upgrade-insecure-requests;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h3 id=&#34;reflection&#34;&gt;Reflection&lt;/h3&gt;
&lt;p&gt;Today is my birthday&amp;hellip;i&amp;rsquo;m getting older, I feel like I don&amp;rsquo;t know a lot of things around my surroundings yet, I have to asses my future goals. My goal was to contribute to opensource as much as I can, May be I am wrong?, i don&amp;rsquo;t know yet. As for my career, I made up my mind to excell in a new domain. I will update what is happening in upcoming months and asses my career goals in next august.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;peace bye!&lt;/em&gt;&lt;/p&gt;</description></item><item><title>Rinku</title><link>//bluepie.in/2020/07/rinku/</link><pubDate>Wed, 22 Jul 2020 19:22:49 +0530</pubDate><guid>//bluepie.in/2020/07/rinku/</guid><description>
&lt;blockquote&gt;
&lt;p&gt;Hi! hope you are doing well future me!,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;rsquo;m well in the comfort of my home, the pandemic isn&amp;rsquo;t over yet, the cases are increasing day by day, infact today, as I am wiriting this, newly infected patients is over 6.5k. The past few weeks has been productive, I&amp;rsquo;m loving what I am doing, learning new stuff, doing a little of reversing at times, Oh snap, I forgot, my harddisk died on me, it was not fun(thank god important stuff were already on a server backed up), had to replace that with an ssd.&lt;/p&gt;
&lt;h2 id=&#34;this-post-is-about-rinku&#34;&gt;This post is about Rinku&lt;/h2&gt;
&lt;p&gt;Rinku is a server side download manager written in react &amp;amp; php.&lt;/p&gt;
&lt;h2 id=&#34;why-the-motivation&#34;&gt;Why - The motivation&lt;/h2&gt;
&lt;p&gt;I..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;wanted to do a project in React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;recently had to create download links for many files on my server, this happened multiple times,
there were certain edge cases where I had to disable a link temporarily, disable link after the intended people downloaded the stuff,&amp;hellip;etc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;needed the download log.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;user-stories-to-fulfill&#34;&gt;User Stories to fulfill&lt;/h2&gt;
&lt;p&gt;I can..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create download link for any files in the server&lt;/li&gt;
&lt;li&gt;manage all download links&lt;/li&gt;
&lt;li&gt;get analytics of the downloaded files&lt;/li&gt;
&lt;li&gt;has google Recaptcha,
&lt;ul&gt;
&lt;li&gt;Recaptcha is configurable, can be turned off/on&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;get logs of download files&lt;/li&gt;
&lt;li&gt;have download page as seperate&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;technology-stack&#34;&gt;Technology stack&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;em&gt;note: fontend and backend are on different repos&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;frontend&#34;&gt;FrontEnd&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/Rinku-Frontend&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to frontend repo&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;react&#34;&gt;React&lt;/h4&gt;
&lt;p&gt;This was absolutely clear from the start, I madeup my mind to use React. The reason being
I had already done a project in angular, eversince that wanted to a project in
React.&lt;/p&gt;
&lt;h3 id=&#34;backend&#34;&gt;Backend&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/Rinku-Backend/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to backend repo&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;php-with-framework-written-from-scratch&#34;&gt;PHP with Framework Written from Scratch.&lt;/h4&gt;
&lt;p&gt;I wanted a simple backend, that could be deployable anywhere, currently the most popular free hosting
service provided language (atleast at the time of writing this post) is php. It&amp;rsquo;s used everywhere.&lt;/p&gt;
&lt;p&gt;So I wanted a simple backend to work for my services, I looked up several frameworks, they had all the features that I do not need, plus add the time I need to learn those frameworks, which is a lot, mainly during development and looking for that unique bug that takes two days to figure out becasue of the framework,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have a little bit of knowledge in the bare essentials, security that it should have, how to write configurable modules.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thus, decided to write a framework of my own. with basic features,security and so that it is easy to add new modules/functionlaity.&lt;/p&gt;
&lt;h4 id=&#34;mysql&#34;&gt;Mysql&lt;/h4&gt;
&lt;p&gt;I have a lot of experience with firebase &amp;amp; mysql, going mysql for this one, mangodb &amp;amp; graphql has to wait.&lt;/p&gt;
&lt;h3 id=&#34;docker-with-docker-compose&#34;&gt;Docker with Docker-Compose&lt;/h3&gt;
&lt;p&gt;I wanted this to have easy setup during development, don&amp;rsquo;t want the hassle of installing php, configuring, adding debug packages, &amp;hellip;etc - &lt;em&gt;reason for choosing docker.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;This little project of mine took around a week to complete, though It has been on my mind for two months. &lt;em&gt;Action is necessary for something to work, waiting is useless in most cases&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;That is it, have a good day!.&lt;/p&gt;</description></item><item><title>Android Reversing Part 4</title><link>//bluepie.in/2020/06/android-reversing-part-4/</link><pubDate>Tue, 30 Jun 2020 00:21:31 +0530</pubDate><guid>//bluepie.in/2020/06/android-reversing-part-4/</guid><description>
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;em&gt;Hi me!, how are you doing, how is the future holding up?&lt;/em&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Personal Update: It&amp;rsquo;s been a rough couple weeks since the last post, Covid-19 has shown no rate of slowing down. Nothing been around my mind lately just junk&amp;hellip; a lot of junk I don&amp;rsquo;t want to think about. To many frequent decisions, Once a friend told me Self control over your thoughts is very important. No matter what I do, It seems I can not achieve it.. at least up-until now.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;disclaimer-im-just-sharing-information-not-distrubuting-mod-files-here-this-is-strictly-for-learning-purposes-only&#34;&gt;Disclaimer : Im just sharing information &amp;amp; not distrubuting mod files here! this is strictly for learning purposes only.&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;intro-why&#34;&gt;Intro &amp;amp; why:&lt;/h2&gt;
&lt;p&gt;This post will be an another reverse engineering/modding post. I recommend checking out last three posts. &lt;a href=&#34;https://bluepie.in/2019/07/android-reversing/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Android Reversing&amp;rdquo;&lt;/a&gt;, &lt;a href=&#34;https://bluepie.in/2019/10/android-reversing-part-2/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Android Reversing Part 2&amp;rdquo;&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://bluepie.in/2020/05/android-reversing-part-3/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Android Reversing part 3&amp;rdquo;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today we will be looking at two apps to study on, to put it simply I did it for my friends, After I told them about the Terria experiment that I did in the last post, they asked me whether Advanced Download Manager &amp;amp; Printer Sharer app can be modded too, I haven&amp;rsquo;t felt this existed to work on something since a long time. I immediately started working on it. spoiler: I completed it quickly&amp;hellip;but it was fun.&lt;/p&gt;
&lt;h3 id=&#34;apps-one-two&#34;&gt;Apps one &amp;amp; two:&lt;/h3&gt;
&lt;p&gt;The first app is ADM (advanced download manager). this app has a premium activation, we will check whether we can exploit this feature.&lt;/p&gt;
&lt;p&gt;The second app is Print share anywhere, this app has premium features that works by installing another app that has to be bought from google play store, for the app to work both applications should have to installed.&lt;/p&gt;
&lt;h2 id=&#34;new&#34;&gt;New:&lt;/h2&gt;
&lt;p&gt;Taking apart of &amp;ldquo;app one&amp;rdquo; and &amp;ldquo;app two&amp;rdquo; does not contain anything new, refer previous post for this section.&lt;/p&gt;
&lt;p&gt;Before discussing the possible ways to achieve our goals, there is something we would like to know, usually when an app has premium features, during first launch the default state of the purchase flag in code will be &amp;lsquo;not purchased&amp;rsquo;(in code), what I mean by &amp;ldquo;first launch&amp;rdquo; is installing the app fresh from app store and launching it for the first time or it communicates with some license server for it information for the first time.&lt;/p&gt;
&lt;p&gt;Second thing we should know about: we are getting into advanced territory here, I&amp;rsquo;ve been sharing basic modding until now, lets go advanced for a change.&lt;/p&gt;
&lt;h2 id=&#34;accessing-data&#34;&gt;Accessing data:&lt;/h2&gt;
&lt;p&gt;As mentioned the debug flag &amp;lsquo;android:debuggable=&amp;ldquo;true&amp;rdquo;&amp;rsquo; must be added to manifest.xml.&lt;/p&gt;
&lt;p&gt;as of writing this post, Google&amp;rsquo;s last stable release is android 9 and the following methond works on my devices running android 8 &amp;amp; 9.&lt;/p&gt;
&lt;p&gt;make sure the device is connected and has debugging enabled.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;
&amp;gt; adb shell
shell $ run-as package_name
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;interesting-part&#34;&gt;Interesting part:&lt;/h2&gt;
&lt;p&gt;For an application to work, consider it being android, apple, windows, space-craft software&amp;hellip;(i.e)any piece of software that has to run and has to retain memory between launches, It has to store the state someplace.&lt;/p&gt;
&lt;p&gt;Yes exactly the android applications work on the same principle. how do we access it?
We can add the debug flag during compilation of the app and install it to the device and run it, by this we overcome the restriction imposed by the android system, (i.e) applications private data can not be accessed by us.&lt;/p&gt;
&lt;p&gt;We can then investigate the configs, private files of the app, One common way an app retains information for example: Entering your name in the app, it remembers it by store the information inside these files(there could be other-ways but lets not over-complicate things).&lt;/p&gt;
&lt;p&gt;Theoretically, after we find out where the config to app&amp;rsquo;s purchase state is found, we can insert new code into the app to change the &amp;lsquo;buy state&amp;rsquo; of the application.&lt;/p&gt;
&lt;p&gt;I later found out that these two apps were way-too-simple to mod, so did not bother use this, but anyway Keep this idea in the mind, we might use it in the future.&lt;/p&gt;
&lt;h2 id=&#34;patching&#34;&gt;patching:&lt;/h2&gt;
&lt;p&gt;Ways to overcome app one:&lt;/p&gt;
&lt;p&gt;So after I decompiled the app, It was way too easy, they maintain a flag and use the flag everywhere for premium option, So basically I can just change it? Yea that is what I did and recompiled whola!. You have to be carefull here since during the first launch, It will just check with server whether you have bought the app from google app store or not. if we bought the app, then it stores the status in memory, what we could do here is change the smali-code to default go to insert the premium status in memory, doing &lt;em&gt;this way we could not worry about the different lifecycle problems that you might face. pause, destroy, resume states of the app.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ways to overcome for app two:&lt;/p&gt;
&lt;p&gt;The second app had the same logic, I made a similar patch in smali, the actual logic and smali code are as follows:&lt;/p&gt;
&lt;p&gt;before:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; // by default the license variable contains false values,
public static final Boolean[] is_prm = new Boolean[2];
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;after:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
public static final Boolean[] is_prm = {true, true};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In smali, it translates to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
const/4 v4, 0x1
const/4 v0, 0x2
new-array v0, v0, [Ljava/lang/Boolean;
const/4 v2, 0x0
invoke-static {v4}, Ljava/lang/Boolean;-&amp;gt;valueOf(Z)Ljava/lang/Boolean;
move-result-object v3
aput-object v3, v0, v2
invoke-static {v4}, Ljava/lang/Boolean;-&amp;gt;valueOf(Z)Ljava/lang/Boolean;
move-result-object v2
aput-object v2, v0, v4
.line 398
sput-object v0, Lcom/dynamixsoftware/printershare/Billing;-&amp;gt;is_prm:[Ljava/lang/Boolean;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Apart from the first app utilising pro-guard, these two apps required very little work, but I enjoyed it neverthless.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Im not gone share the apk for obvious reasons, this concludes this post, have a good day &amp;amp; see you next time.&lt;/p&gt;</description></item><item><title>Android Reversing Part 3</title><link>//bluepie.in/2020/05/android-reversing-part-3/</link><pubDate>Thu, 28 May 2020 04:55:51 +0530</pubDate><guid>//bluepie.in/2020/05/android-reversing-part-3/</guid><description>
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;em&gt;Hi!, Its nice to post weekely for a change, I never posted weekely before, anyway this might be a one time thing(posting weekely).&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;disclaimer-im-just-sharing-information-not-distrubuting-mod-files-here-this-is-strictly-for-learning-purposes-only&#34;&gt;Disclaimer : Im just sharing information &amp;amp; not distrubuting mod files here! this is strictly for learning purposes only.&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;let-s-start-why&#34;&gt;Let&amp;rsquo;s start &amp;amp; why&lt;/h2&gt;
&lt;p&gt;If you forgot for some reason, this is part-3 of android reversing/modding, I recommend checking out the previous post &lt;a href=&#34;https://bluepie.in/2019/07/android-reversing/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Android Reversing&amp;rdquo;&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://bluepie.in/2019/10/android-reversing-part-2/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Android Reversing Part 2&amp;rdquo;&lt;/a&gt; in &amp;lsquo;reversing category&amp;rsquo;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Our test subject for today will be Terria, Its a game costing &amp;ldquo;410 rupees&amp;rdquo; or &amp;ldquo;5.38&amp;rdquo; usd,&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Its not a huge sum for a one time fee, but its some amount, and why pay if you have alternatives.&lt;/p&gt;
&lt;h4 id=&#34;why-this-game&#34;&gt;why this game?&lt;/h4&gt;
&lt;p&gt;I saw this game on trending, after checking it out, I came to know it was a popular game with a large fanbase. Watching some gameplay made me hooked up to this game. I wanted to try it. (but not pay for it.)&lt;/p&gt;
&lt;h4 id=&#34;how-to-get-it-for-free-google-search-and-download-it&#34;&gt;How to get it for free?, google search and download it?&lt;/h4&gt;
&lt;p&gt;As you know me I don&amp;rsquo;t trust the any sources other than google-play, since it is very easy to attach a backdoor to any apk, I do not want that..&lt;/p&gt;
&lt;h4 id=&#34;so-how&#34;&gt;So how?&lt;/h4&gt;
&lt;p&gt;Incase you do not know, google has a 30 min window(atleast at the time of writing) (i.e.) if you buy anything on google-play store, within 30 minutes you can choose refund, refund will be provided no questions asked and app will be uninstalled.&lt;/p&gt;
&lt;p&gt;The trick here is to take a backup of the app before clicking the refund button.&lt;/p&gt;
&lt;p&gt;The main problem with this method is that, some apps verify (license with google-play) whether if you have really bought the app. So when we try to install the app and open it, the app will not work.&lt;/p&gt;
&lt;p&gt;so lets see how we can overcome this..&lt;/p&gt;
&lt;h2 id=&#34;continue-d&#34;&gt;continue..d&lt;/h2&gt;
&lt;p&gt;As said this section is just a continuation of the prevous posts titled &amp;lsquo;Android Reversing Part 2&amp;rsquo; and &amp;lsquo;android reversing&amp;rsquo;. The basics, installations, decompiling, recompiling and other stuff are in those post, check them out.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id=&#34;patching&#34;&gt;Patching&lt;/h3&gt;
&lt;p&gt;So &lt;a href=&#34;https://developer.android.com/google/play/licensing&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;license verification&lt;/a&gt; is a library provided by google that comes packged with the app, using our tools, we can decompile and search the files for weak spots.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You say license patching? Why not use lucky patcher, I dont want trust it/installn it/ risk being hit by malware.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By analysing the files we find the following lines, they reveal the different codes used for mainting the license check, using these we can proceed.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
# static fields
...
.field private static final LICENSED:I = 0x0
.field private static final LICENSED_OLD_KEY:I = 0x2
.field private static final NOT_LICENSED:I = 0x1
.field private static final SIGNATURE_ALGORITHM:Ljava/lang/String; = &amp;quot;SHA1withRSA&amp;quot;
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;by digging deeper, we come across an interesting method called &amp;ldquo;allowAccess&amp;rdquo;,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
invoke-interface {p2}, Lcom/google/android/vending/licensing/Policy;-&amp;gt;allowAccess()Z
move-result p2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;by checking the source of the file &lt;a href=&#34;https://github.com/google/play-licensing/blob/master/lvl_library/src/main/java/com/google/android/vending/licensing/Policy.java&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;github link&lt;/a&gt;, we can verify that this function does the magic work.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
/**
* Policy used by {@link LicenseChecker} to determine whether a user should have
* access to the application.
*/
public interface Policy {
...
/**
* Provide results from contact with the license server. Retry counts are
* incremented if the current value of response is RETRY. Results will be
* used for any future policy decisions.
*
* @param response the result from validating the server response
* @param rawData the raw server response data, can be null for RETRY
*/
void processServerResponse(int response, ResponseData rawData);
/**
* Check if the user should be allowed access to the application.
*/
boolean allowAccess();
...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;override&#34;&gt;Override&lt;/h3&gt;
&lt;p&gt;the java logic of our override is pretty simple.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;original code&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
if(mPolicyInterface.allowAccess()){
unlockApp();
} else{
lockApp();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;patched code&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
if(true){ // we make this always true
unlockApp();
} else{
lockApp();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;the equivalent smali code will be&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;original smali code&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
invoke-interface {p2}, Lcom/google/android/vending/licensing/Policy;-&amp;gt;allowAccess()Z
move-result p2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;modified smali code&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
const p2, 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;that is it, recompile, resign and install the app/game.&lt;/p&gt;
&lt;h3 id=&#34;end&#34;&gt;End&lt;/h3&gt;
&lt;p&gt;Im not gona share the apk here, but I believe that I have shared the knowledge to do so. bye, see ya next time.&lt;/p&gt;</description></item></channel></rss>