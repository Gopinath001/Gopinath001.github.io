<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bluepie&#39;s Journal on Bluepie&#39;s Journal</title><link>//bluepie.in/</link><description>Recent content in Bluepie&#39;s Journal on Bluepie&#39;s Journal</description><language>en-us</language><lastBuildDate>Sun, 22 May 2022 21:04:22 +0000</lastBuildDate><atom:link href="/" rel="self" type="application/rss+xml"/><item><title>Trying Out Flutter 3.0</title><link>//bluepie.in/2022/05/trying-out-flutter3/</link><pubDate>Sun, 22 May 2022 21:04:22 +0000</pubDate><guid>//bluepie.in/2022/05/trying-out-flutter3/</guid><description>
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Been a while..hope everything is going well. PersonalNote: Joined &lt;code&gt;Verizon&lt;/code&gt; on May 9th 2022&amp;hellip;reason for missing posts, was stuck in documentations, kts&amp;rsquo;..etc. I have already met my new team..this will be a great journey for me&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;flutter-3-0&#34;&gt;Flutter 3.0&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://flutter.dev/docs/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Flutter 3.0&lt;/a&gt; is a major update to the Flutter SDK and I decided to try it out.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supports all platforms&lt;/strong&gt; this is a huge claim..lets try this out shall we?&lt;/p&gt;
&lt;h2 id=&#34;choosing-a-usecase-that-would-be-useful-for-every-platform&#34;&gt;Choosing a usecase that would be useful for every platform&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;I sit infront of my computer all day&lt;/strong&gt;&amp;hellip;I would like to get reminded to take a break every now and then. Most of the time, &lt;strong&gt;I even forget to drink water&lt;/strong&gt;.
I want this feature on all platforms.. plus running natively has its benefits. (small footprint, less overhead/fast &amp;amp; minimal usage of system resources to name a few)&lt;/p&gt;
&lt;h2 id=&#34;goal-for-the-prototype&#34;&gt;Goal for the Prototype&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;minimal UI to get msg &amp;amp; interval from user&lt;/li&gt;
&lt;li&gt;Notify at configured intervals with the given message&lt;/li&gt;
&lt;li&gt;If pc, run in background with no active ui
&lt;ul&gt;
&lt;li&gt;show icon in the system tray/taskbar&lt;/li&gt;
&lt;li&gt;open a new window with gif in the bottom right corner&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;If running on mobile devices
&lt;ul&gt;
&lt;li&gt;run in background after app is closed&lt;/li&gt;
&lt;li&gt;show the notification with the given message at set intervals&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-prototype&#34;&gt;The Prototype&lt;/h2&gt;
&lt;p&gt;The source code with demo is available on &lt;a href=&#34;https://github.com/aghontpi/idler&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cons-from-my-personal-experience&#34;&gt;Cons from my personal experience&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Eventhough it supports all platforms&amp;hellip;even web(compiles to &lt;code&gt;Javascript&lt;/code&gt; and runs in browser&amp;hellip;) when a feature is not supported, we have to implement this for all platforms.. Note the language to implement the feature for each platform is also different.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;macOS&lt;/code&gt;: &lt;code&gt;Swift&lt;/code&gt;/ &lt;code&gt;Objective-C&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;android&lt;/code&gt;: &lt;code&gt;Kotlin&lt;/code&gt; /&lt;code&gt;Java&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iOS&lt;/code&gt;: &lt;code&gt;Swift&lt;/code&gt;/ &lt;code&gt;Objective-C&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;window&lt;/code&gt;: &lt;code&gt;c++&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linux&lt;/code&gt;: &lt;code&gt;c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;While working in native, each platform has a preferred Editor &amp;amp; each has it own set of tools to work with.
&lt;ul&gt;
&lt;li&gt;for ex: you can write swift code in &lt;code&gt;visual studio code&lt;/code&gt;..but you are missing out all the features from &lt;code&gt;xcode&lt;/code&gt;..&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;We do the communication between &lt;code&gt;Dart&lt;/code&gt; and &lt;code&gt;Native&lt;/code&gt; by using &lt;a href=&#34;https://docs.flutter.dev/development/platform-integration/platform-channels&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;platform-channels&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pub.dev&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;pub.dev&lt;/a&gt; is not mature enough at the moment..(finding a package that supports all platforms is rare)
&lt;ul&gt;
&lt;li&gt;this is similar to &lt;code&gt;node modules&lt;/code&gt; in &lt;code&gt;npm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;some examples:
&lt;ul&gt;
&lt;li&gt;In my usecase for &lt;code&gt;macos&lt;/code&gt;,&lt;code&gt;windows&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt;. &lt;strong&gt;I had to open a new window&lt;/strong&gt; to show the reminder with a &lt;code&gt;gif&lt;/code&gt;.. this is not supported in &lt;code&gt;Flutter&lt;/code&gt; yet. &lt;a href=&#34;https://github.com/flutter/flutter/issues/30701&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;This feature request is still open since 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For &lt;code&gt;Mobiles&lt;/code&gt;.. I decided to &lt;strong&gt;contain the &lt;code&gt;Flutter&lt;/code&gt; UI in a popup window(image above)&lt;/strong&gt;.. this is also not supported in &lt;code&gt;Flutter&lt;/code&gt; yet.. I spend &lt;em&gt;COUPLE OF HOURS&lt;/em&gt; tinkering with different API&amp;rsquo;s. In the end, I achieved the result by implementing it on the &lt;code&gt;Native&lt;/code&gt; side.&lt;/li&gt;
&lt;li&gt;&amp;amp; many more&amp;hellip; ~sigh&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flutter supports 70-75% of the features to build a production ready app(in a single codebase &lt;code&gt;Dart&lt;/code&gt;)&amp;hellip; but if the feature we want is in the unsupported 25-30% then we have to implment it :) (mutile codebases bason on target platform).&lt;/p&gt;
&lt;h2 id=&#34;how-where-did-i-spend-my-time-coding-this&#34;&gt;How &amp;amp; Where did I spend my time coding this?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dart &amp;amp; Flutter = 40%&lt;/li&gt;
&lt;li&gt;Researching &amp;amp; Writing native code to support a specific usecase = 40%&lt;/li&gt;
&lt;li&gt;Configuring, Debugging &amp;amp; Understanding devtools = 20%&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Flutter is cool, I like the challenges it offers XD. I am excited to see what the future holds for it.&lt;/p&gt;</description></item><item><title>Modding a macOS App</title><link>//bluepie.in/2022/02/modding-a-macos-app/</link><pubDate>Sun, 20 Feb 2022 19:10:13 +0000</pubDate><guid>//bluepie.in/2022/02/modding-a-macos-app/</guid><description>
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;This post is about reversing.. but for a MACOS binary. Lets drive straight into it.&lt;/p&gt;
&lt;p&gt;Modding in macOS is fairly new to me, but a binary is a binary and it can be modded!. I started to daily drive macOS a month or two ago, the why and what&amp;rsquo;s is a whole different story to post about.&lt;/p&gt;
&lt;p&gt;Like I have said previously in my other &lt;a href=&#34;https://bluepie.in/categories/reversing/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;re posts&lt;/a&gt;, &amp;ldquo; I don&amp;rsquo;t trust mods from the internet&amp;rdquo; If I can mod it then its fine, otherwise I&amp;rsquo;m paying for it.&lt;/p&gt;
&lt;p&gt;I just started to understand the quirks of &amp;ldquo;OS X&amp;rdquo;, Though some of my methods may be crude&amp;hellip;it works, I will perfect them..&lt;/p&gt;
&lt;h2 id=&#34;target&#34;&gt;Target&lt;/h2&gt;
&lt;p&gt;So there is this great app for cleaning your Mac&amp;rsquo;s junk/storage files, but the free version only lets you clean 500mb daily.. the premium version is a whooping 3k per year&amp;hellip;do you get where I am going with this ? &amp;hellip;YES!&amp;hellip;modding for fun and profit (PROFIT = personal use)&lt;/p&gt;
&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;
&lt;p&gt;So I&amp;rsquo;m gonna be trying out ghidra &amp;ldquo; The NSA&amp;rsquo;s reverse engineering tool &amp;ldquo;, mainly because Its a open source tool and I wanted to do some reverse engineering with it for a long time now.&lt;/p&gt;
&lt;p&gt;make sure you have &lt;a href=&#34;https://brew.sh/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;brew&lt;/a&gt; installed and then run the following command&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;brew install --cask ghidra
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;making-observation-to-the-target&#34;&gt;Making observation to the target&lt;/h2&gt;
&lt;p&gt;The app throws you with the &amp;ldquo;Nag Screen&amp;rdquo; whenever you use the app, it blocks the usage of features (can not use the app to remove more than 500MB of data,privacy scanning won&amp;rsquo;t work unless you pay,..etc).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;500mb storage limit reached &amp;lsquo;nag screen&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/500mb-over-nag-screen.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trial period expired &amp;lsquo;nag screen&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/clean-my-mac-unmodded.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;basics-understanding-ghidra&#34;&gt;Basics &amp;amp; Understanding Ghidra&lt;/h2&gt;
&lt;p&gt;All macOS apps have the following structure, the main binary will always be inside the MacOS directory.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/mac-app-folder-structure.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Launch Ghidra and create a new project, then drag and drop the binary into the project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/create-new-project.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Mac has this binary format &amp;ldquo;macobinary&amp;rdquo; - basically it contains the different target executables, ex: (arm binary vs the x86 binary).. mine is a x86 machine, will be modding that alone.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/choose-appropriate-target-binary.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;After the import, Ghidra will automatically ask you to analyse the target binary, choose Analyse. (it will make our life easier), based on the binary size and your cpu cores, it may take couple minutes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/will-ask-for-analyse-choose-analyse.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Only focus on the following five windows, that is enough to get the job done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/ghidra-ui.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 = will contain the symbol tabel, this is where we do most of the filtering.&lt;/li&gt;
&lt;li&gt;2 = shows the disassembly of the binary (assembly language), this is where we do the actual reversing, (i.e) patching, understanding logic, etc.&lt;/li&gt;
&lt;li&gt;3 = This is a great feature, shows the equivalent c code, to the selected assembly section.&lt;/li&gt;
&lt;li&gt;4 &amp;amp; 5 = shows the incoming and outgoing function calls, this will help us find interesting things about the binary, which then can be used for identifying logic and patching.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IF ANY OF THE ABOVE WINDOWS ARE NOT OPEN, YOU CAN ENABLE THEM THROUGH THE MENU OPTION &amp;ldquo;WINDOW&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;analysis&#34;&gt;Analysis&lt;/h2&gt;
&lt;p&gt;It will take some time to find what you are looking for, but I have already invested time in this, so what we need is &amp;ldquo;activationManager&amp;rdquo; class, it has all sorts of interesting functions like &amp;ldquo;activationStatus, isAppActivated..etc&amp;rdquo;. Looking for references, it is used throughout the app, so lets change it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/different-app-status.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Looking around, we find the different status codes inside &amp;ldquo;activationStatus&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;By checking other functions, it becomes obvious that, changing only &amp;ldquo;isAppActivated&amp;rdquo; function is enough. The return type of the function is &amp;ldquo;char&amp;rdquo;, with reference to &amp;ldquo;status&amp;rdquo; from above..we should return &amp;ldquo;3&amp;rdquo;. From the ascii table, &amp;ldquo;0x33&amp;rdquo; is the equivalnet for &amp;ldquo;3&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Patching the &amp;ldquo;isAppActivated&amp;rdquo; function, with the following code.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;push rbp
mov rbp,rsp
mov DWORD PTR [rbp-0x4],0x0
mov eax,0x33
pop rbp
ret
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then export the program &amp;ldquo;File -&amp;gt; Export Program&amp;rdquo;, our patched binary is ready. Now give executable permission and move it to the original directory.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/move-exported-binary-to-original-directory.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;rename the original&lt;/p&gt;
&lt;h2 id=&#34;signing-running-the-modded-binary-for-profit&#34;&gt;Signing &amp;amp; Running the modded binary for PROFIT&lt;/h2&gt;
&lt;p&gt;Unlike windows and linux, macOS won&amp;rsquo;t run applications without signing the binary.. but we can generate your own certificates for personal use (dont have to buy a developer account for 99$/year).&lt;/p&gt;
&lt;p&gt;create a certificate using &amp;ldquo;keychain Access&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/create-custom-certifcate.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;choose &amp;ldquo;code signing&amp;rdquo; in &amp;ldquo;certificate type&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/choose-code-signing.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Go to the application root &amp;ldquo;/Application/&amp;rdquo; to resign the entire app.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo codesign -s &amp;quot;&amp;lt;name-of-certificate&amp;gt;&amp;quot; -fv CleanMyMac-MAS.app/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the app&amp;hellip; Now its been modded and I don&amp;rsquo;t have to pay 3k INR a year or worry about untrusted binaries from the internet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/modding-a-macos-app/removed-files-beyong-the-limit.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can see from the image, all the premium features are now unlocked &amp;amp; we can also remove the junk files exceeding 500MB.&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;This was a fun excerise to dig around. Macos is not that limited as I thought it was&amp;hellip; Sure it has its quirks.&lt;/p&gt;</description></item><item><title>&#34;F-droid&#34; vs the pain that is &#34;Google PlayStore&#34;</title><link>//bluepie.in/2022/01/publishing-to-fdroid-google-play/</link><pubDate>Wed, 05 Jan 2022 21:34:18 +0530</pubDate><guid>//bluepie.in/2022/01/publishing-to-fdroid-google-play/</guid><description>
&lt;p&gt;&lt;strong&gt;How you doing? hope you are doing well. I missed to post on december because I was juggling too much things at once and needed a break&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;fdroid&#34;&gt;Fdroid?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://fdroid.org&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Fdroid&lt;/a&gt; is a free and open source Android application repository. You can use Fdroid via the &lt;a href=&#34;https://f-droid.org/client&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;F-Droid client&lt;/a&gt; or the &lt;a href=&#34;https://f-droid.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;F-Droid website&lt;/a&gt;. It is similar to the &lt;a href=&#34;https://play.google.com/store&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Google Play Store&lt;/a&gt;, but with a few key differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is free and open source&lt;/li&gt;
&lt;li&gt;contains only open source applications&lt;/li&gt;
&lt;li&gt;is not a commercial service&lt;/li&gt;
&lt;li&gt;all google play dependencies are stripped out when publishing&lt;/li&gt;
&lt;li&gt;goes through a series of automated tests &amp;amp; manual reviews before being accepted&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/fdroid.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;how-do-i-add-a-new-app-to-fdroid&#34;&gt;How do I add a new app to Fdroid?&lt;/h3&gt;
&lt;p&gt;There are two options, choose one:&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t want to do it yourself&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You create a issue in &lt;a href=&#34;https://gitlab.com/fdroid/rfp/-/issues&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;REP - Request For Packaging&lt;/a&gt; and the contributors will review your request and add it to the repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/rep.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to do it yourself&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open a issue on &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/-/merge_requests&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Fdroid data&lt;/a&gt; with the appropriate yaml(metadata) file, you should create one with your metadata, refer &lt;a href=&#34;https://f-droid.org/docs/FAQ_-_App_Developers/#how-do-i-get-my-app-included&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt;, &lt;a href=&#34;https://f-droid.org/docs/Submitting_to_F-Droid_Quick_Start_Guide/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;this link&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md#merge-requests&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt; for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After being reviewed and added to the repository, it will avialable for everyone to download and install.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/fdroid-data.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;here is a basic example of the metadata yaml file:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Categories:
License:
AuthorName:
AuthorEmail:
AuthorWebSite:
WebSite:
SourceCode:
IssueTracker:
Changelog:
...etc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;View the full file &lt;a href=&#34;https://gitlab.com/fdroid/wiki/-/wikis/Metadata/YAML-Metadata&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;how-do-i-publish-updates-to-fdroid&#34;&gt;How do I publish updates to Fdroid?&lt;/h3&gt;
&lt;p&gt;The great thing about Fdroid is that it automatically detects new versions of your app from github and updates it there. So you just have to make a new tag in your repo and fdroid will handle the rest.&lt;/p&gt;
&lt;h3 id=&#34;how-did-i-publish-to-fdroid&#34;&gt;How did I publish to Fdroid?&lt;/h3&gt;
&lt;p&gt;I went through &amp;ldquo;do it yourself&amp;rdquo; and &lt;a href=&#34;https://gitlab.com/fdroid/fdroiddata/-/merge_requests/10097&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;this is the pull request&lt;/a&gt; that I created.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;AntiFeatures:
- NonFreeAdd
Categories:
- System
License: GPL-3.0-only
AuthorName: BluePie
...etc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;View the full file is &lt;a href=&#34;https://gitlab.com/bluepie/fdroiddata/-/raw/09cc09572b0352a07b84a01a9d21ae5f4c4a1bc3/metadata/bluepie.ad_silence.yml&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;google-play-store&#34;&gt;Google Play Store?&lt;/h2&gt;
&lt;p&gt;Goople PlayStore needs no explanation. It is a commercial service that is used by millions of users to download and install apps. It is a great way to monetize &amp;amp; distribute your apps. You need to buy a license with a one time fee though.&lt;/p&gt;
&lt;p&gt;Anyway lets get started&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;how-do-i-publish-update-to-google-play-store&#34;&gt;How do I publish/Update to Google Play Store?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;First you create a new app,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/create-new-app.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complete all the tasks in the Dashboard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/complete-tasks-in-console-dashboard.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate privacy policy(&lt;a href=&#34;https://app-privacy-policy-generator.firebaseapp.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;i recommend this&lt;/a&gt;) and host it somewhere.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/generate-privacy-policy.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Take build bundle in android studio.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/generate-signed-apk-bundle.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/generate-bundle-dialog.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create store listing with appropriate data,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/update-store-listing.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Note to upload the correct images&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/upload-appropriate-images.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use the bundle from before and make a test release and promote it to production. (review process takes time)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/upload-bundle.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-pain&#34;&gt;The pain&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Publishing to playstore especially when the app is OpenSource is a manual time consuming process vs the automated process in Fdroid.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is a onetime fee for publishing to playstore.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every release takes a week to get reviewed and published, even if it is OpenSource.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from my experience time differs between minor, major and bug fixes (based on semantic versioning)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The customer support is full of bots&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Store is unfair&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I got my app delisted because I had the word &amp;ldquo;AD&amp;rdquo; in the Icon.. eventhough there are other apps from playstore with 1m+ installs that also has the same, either way I had to change the Icon to get it back on the store.&lt;/li&gt;
&lt;li&gt;I could not get a proper response from Support &lt;a href=&#34;https://github.com/aghontpi/ad-silence/issues/19&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;more on here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The feedback back system is not that great, If users encounter crash/ something is not working.. In github you can have a correct feedback loop but in playstore..its just an uninstall with a lower rating.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/publishing-to-fdroid-and-playstore/delisted.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;If you have an OpenSource App, spend less time updating it on Playstore. Stick with Github releases or Fdroid releases. Don&amp;rsquo;t even get my started on Apple app store.&lt;/p&gt;</description></item><item><title>Accuradio, Spotify...etc Adblocker in Kotlin</title><link>//bluepie.in/2021/11/accuradio-spotify-adblocker-in-kotlin/</link><pubDate>Thu, 18 Nov 2021 19:46:00 +0000</pubDate><guid>//bluepie.in/2021/11/accuradio-spotify-adblocker-in-kotlin/</guid><description>
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hello how you been?, hope everything is going well.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I wanted to learn Kotlin for native Android development, I already knew how to do it with java, so the only obstacle for me is learning Kotlin.&lt;/p&gt;
&lt;h2 id=&#34;kotlin&#34;&gt;Kotlin&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin &lt;a href=&#34;https://trello.com/c/zYFtp51G/1-learn-kotlin&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;trello board&lt;/a&gt; that I used to track progress.&lt;/li&gt;
&lt;li&gt;After learning the basics for Kotlin, &lt;a href=&#34;https://play.kotlinlang.org/koans/overview&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Kotlin koans&lt;/a&gt; is a great place for practice (beginner to advanced).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chosing-what-to-do-with-kotlin&#34;&gt;Chosing what to do with Kotlin&lt;/h2&gt;
&lt;p&gt;I use &lt;a href=&#34;https://accuradio.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Accuradio&lt;/a&gt; android app to stream music, but it does not have a paid tear, So the ads are not skippable and there was no existing adblocker that does this(which is a pain). So I decided to write one in Kotlin.&lt;/p&gt;
&lt;p&gt;So its decided, I am doing a project in Kotlin to block/silence ads in Accuradio, some additional things I decided to implement are the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;should be extensible to other apps like Spotify,&amp;hellip;etc&lt;/li&gt;
&lt;li&gt;should have minimal UI&lt;/li&gt;
&lt;li&gt;should be lightweight&lt;/li&gt;
&lt;li&gt;should be completely openSource.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To be extensbile, I should have a common pattern/way to detect ads in these apps&amp;hellip; One such way is by using app&amp;rsquo;s notification.&lt;/p&gt;
&lt;p&gt;I can determine what an app is currenly playing using the notification, using the &lt;a href=&#34;https://developer.android.com/reference/android/app/NotificationListenerService&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;notification listener&lt;/a&gt; service and parsing the posted notifications, mute/unmute the app based on the content.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/accuradio-spotify-ad-blocker/flow.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An update, &lt;strong&gt;I already added support for Spotify and Tidal.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;I pretty much have to just&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;implement the &lt;a href=&#34;https://developer.android.com/reference/android/app/NotificationListenerService&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;NotificationListenerService&lt;/a&gt; service, and parse the posted notifications,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;extend the &lt;a href=&#34;https://developer.android.com/reference/android/app/NotificationListenerService&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;NotificationListenerService&lt;/a&gt; class and implement the &lt;a href=&#34;https://developer.android.com/reference/android/app/NotificationListenerService.OnNotificationPostedListener.html#onNotificationPosted&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;onNotificationPosted&lt;/a&gt; method &amp;amp; &lt;a href=&#34;https://developer.android.com/reference/android/app/NotificationListenerService.OnNotificationConnectedListener.html#onNotificationConnected&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;onNotificationConnected&lt;/a&gt; method.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-kt&#34;&gt;class NotificationListener : NotificationListenerService() {
override fun onListenerConnected() {
super.onListenerConnected()
appNotificationHelper?.updateNotification(&amp;quot;AdSilence, listening for ads&amp;quot;)?.run {
startForeground(NOTIFICATION_ID, this) // persistent notification
}
Log.v(TAG, &amp;quot;notification listener connected&amp;quot;)
}
override fun onNotificationPosted(sbn: StatusBarNotification?) {
super.onNotificationPosted(sbn)
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;why do I need to run it as a foreground service?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;because In recent versions of android, any app that is actively running the background must post a notification to the status bar. Otherwise the app will be killed by the system.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;then mute/unmute the app based on the content,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-kt&#34;&gt;
sbn?.let {
with(AppNotification(applicationContext, it.notification, sbn.packageName)) {
Preference(applicationContext).isAppConfigured(this.getApp()).takeIf { b -&amp;gt; b }
?.run {
Utils().run {
when (NotificationParser(this@with).isAd()) {
true -&amp;gt; {
this.mute()
isMuted = true
}
false -&amp;gt; {
isMuted = false
this.unmute();
)
}
}
}
}
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;next important step is granting the app, the permission to listen to notifications. (if all apps can listen to incoming notifications, this would be a huge security flaw!)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.android.com/training/permissions/requesting&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;grant permission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;since this app is openSource, everyone can see the source code before granting permission&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bascially the following one line has to be used. (note: using string to support older devices)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;startActivity(Intent(&amp;quot;enabled_notification_listeners&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;in the android manifest, add the following to the &lt;code&gt;&amp;lt;application&amp;gt;&lt;/code&gt; tag,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;telling the system to use the file &lt;code&gt;NotificationListenerService&lt;/code&gt; as the notification listener service.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;service android:name=&amp;quot;.NotificationListener&amp;quot;
android:label=&amp;quot;@string/notification_listener_name&amp;quot;
android:permission=&amp;quot;android.permission.BIND_NOTIFICATION_LISTENER_SERVICE&amp;quot;
android:exported=&amp;quot;false&amp;quot;&amp;gt;
&amp;lt;intent-filter&amp;gt;
&amp;lt;action android:name=&amp;quot;android.service.notification.NotificationListenerService&amp;quot; /&amp;gt;
&amp;lt;/intent-filter&amp;gt;
&amp;lt;/service&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That is all is required to get the app to work, there are other things like UI, checking app installed or not, maintaining the app running in the background, hiding the app from recents, restarting the service, preference&amp;hellip;etc. Since the app is so lightweight (around 150KB)&amp;hellip;&lt;/p&gt;
&lt;p&gt;I could write about every part of the app in this, but this app is open source&amp;hellip;.its already explained. It was so refreshing and fun work on this&amp;hellip; Kotlin is fun and I am glad to have learned it(atleast some bit).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aghontpi/ad-silence&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Github/source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=bluepie.ad_silence&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Google play store link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f-droid.org/packages/bluepie.ad_silence/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Fdroid link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/hWfiQN4IUFM&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;featured in top apps - youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nextpit.com/apps-of-the-week-48-2021&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;featured in app of the week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Open Source Dnd Email Editor</title><link>//bluepie.in/2021/10/open-source-dnd-email-editor/</link><pubDate>Sun, 10 Oct 2021 10:48:30 +0000</pubDate><guid>//bluepie.in/2021/10/open-source-dnd-email-editor/</guid><description>
&lt;p&gt;I created a drag and drop email editor, I&amp;rsquo;ve been working on it for the past month. It&amp;rsquo;s a lot of fun to work on, I completed it for first release, I&amp;rsquo;ll shed some light on the challenges I faced and how I solved them.&lt;/p&gt;
&lt;h2 id=&#34;why-s-what-s&#34;&gt;Why&amp;rsquo;s &amp;amp; What&amp;rsquo;s&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;why build this?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No free editors/open source editors that does the job,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;but why not profit?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Not interested, I believe in Open Source. Heavily inspired by how LINUX (OPEN SOURCE) is useful for everyone now.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;the real motivation?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let me be frank here, I dont like &lt;em&gt;unalyer github&lt;/em&gt;, MAINLY BECAUSE OF THEIR FALSE ADVERTISEMENT AS OPEN SOURCE, I understand that&amp;rsquo;s how the get their business going but, damn its scummy.&lt;/p&gt;
&lt;p&gt;One by one respoectively&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scumbag unlayer,&lt;/li&gt;
&lt;li&gt;grapjs mjml,
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/artf/grapesjs-mjml&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;their implementation&lt;/a&gt; was cool with mjml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;company that I am working for, at the time of writing this, needed an email dnd editor.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;challenges&#34;&gt;Challenges&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;maintaining layer between MJML and Me.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;writing parsers, serializers and deseriealizers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;design and code ui&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;manage drag and drop, mouse, key events, &amp;hellip;etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;deciding what kind of api to expose&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;deciding what inline editor to use&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I can do one of two things&lt;/li&gt;
&lt;li&gt;One, spend time &amp;amp; learn the api&amp;rsquo;s of an existing inline editor&lt;/li&gt;
&lt;li&gt;Two, spend time creating a yet another inline editor, that I have full control of. (I&amp;rsquo;ll learn a lot of new things If I do this)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I did both, but after finding serveral small size inline editors, I decided to completely go ahead with creating a custom InlineEditor, it is not a major task if I used &lt;em&gt;document.executeCommand&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;maintaining demo/docs/npm package in single repo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;backend&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using firebase fn in combination with express&lt;/li&gt;
&lt;li&gt;firestore for database&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;ll explain &lt;strong&gt;&lt;em&gt;maintaining demo/docs/npm package in single repo&lt;/em&gt;&lt;/strong&gt; now, since that is the recent &amp;amp; last thing that I completed.&lt;/p&gt;
&lt;h2 id=&#34;maintaining-demo-docs-npm-package-in-single-repo&#34;&gt;Maintaining demo/docs/npm package in single repo&lt;/h2&gt;
&lt;p&gt;Let me fist explain the layout of the items in the repo.&lt;/p&gt;
&lt;p&gt;the repo contains,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;create-react-app&lt;/em&gt; react-scripts by default for the demo page&lt;/li&gt;
&lt;li&gt;the &lt;em&gt;editor&lt;/em&gt; component
&lt;ul&gt;
&lt;li&gt;I want this to be bundled and published to npm&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;the demo branch, that automatically deploys with &lt;a href=&#34;https://pages.github.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;api docs for the project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;checklist that I created before starting work on this&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Its always better to plan ahead to avoid surprises later, created a small checklist to help me with this.&lt;/p&gt;
&lt;p&gt;I should have,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;verified that the Editor is standalone
&lt;ul&gt;
&lt;li&gt;(i.e). that there is no demo build dependencies directly in the editor (like on first editor load, fetch this template from the backend, ..etc)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;verified that the Editor is fully functional
&lt;ul&gt;
&lt;li&gt;(i.e). that the editor can be used in a demo page without problems&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;decided on what build system to use
&lt;ul&gt;
&lt;li&gt;webpack&lt;/li&gt;
&lt;li&gt;rollup&lt;/li&gt;
&lt;li&gt;nd&amp;hellip;etc, millions of other build systems out there&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;created the build system, in such a way that It wont affect the demo build (created with create-react-app)
&lt;ul&gt;
&lt;li&gt;at the time of writing this, react-scripts uses webpack v4, So installing another instance of webpack v5 for npm build, will cause react-scripts to fail, the same goes for its dependencies aswell.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;created a seperate branch, do all documentations and changes in that branch&lt;/li&gt;
&lt;li&gt;bundled only selected files in the npm build, should only contain
&lt;ul&gt;
&lt;li&gt;editor&lt;/li&gt;
&lt;li&gt;css/sass files used with the editor&lt;/li&gt;
&lt;li&gt;image files used with the editor&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;created sepereate &lt;strong&gt;&lt;em&gt;scripts in package.json&lt;/em&gt;&lt;/strong&gt; for the differnet builds
&lt;ul&gt;
&lt;li&gt;build = for react-scripts-build&lt;/li&gt;
&lt;li&gt;build:module = for npm-build&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;created a seperate packge.json for the npm build, since the exported Editor component doesn&amp;rsquo;t need all the dependencies from the repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Choosing build system for the editor&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I have already published packages using webpack in the past, So I already knew webpack and its different modules. But the problem is I don&amp;rsquo;t know if I can use two webpack instances in a single project.&lt;/p&gt;
&lt;p&gt;I Could go for a new build system just to solve this problem alone, Or find a way to use two webpack instances in a single project.&lt;/p&gt;
&lt;p&gt;This is the point in time, where I found out about &lt;a href=&#34;https://classic.yarnpkg.com/lang/en/docs/cli/add/#toc-yarn-add-alias&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;yarn alias&lt;/em&gt;&lt;/a&gt;, After I found this, I knew which build system to choose (webpack v5).&lt;/p&gt;
&lt;p&gt;webpack has an environment configuration named &amp;lsquo;WEBPACK_PACKAGE&amp;rsquo;, it takes the package name of the webpack, So I can utilize this to install multiple versions, one with name &amp;lsquo;webpack&amp;rsquo; another with alias &amp;lsquo;webpack-module&amp;rsquo;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt; &amp;quot;webpack-module&amp;quot;: &amp;quot;npm:webpack@^5.60.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I can then run webpack normally with &amp;lsquo;react-scripts&amp;rsquo; and &amp;lsquo;WEBPACK_PACKAGE=webpack-module webpack&amp;rsquo; for npm build&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Requirements for publishing to npm&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For publishing to npm, I need,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm account&lt;/li&gt;
&lt;li&gt;a package.json with seperate dependencies from the demo package.json
&lt;ul&gt;
&lt;li&gt;there should be a two package.json now. One for demo build, another for package build&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;a webpack configuration file for bundling&lt;/li&gt;
&lt;li&gt;typescript definition file&lt;/li&gt;
&lt;li&gt;output of &lt;em&gt;npm pack&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Webpack configuration&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;webpack configuration should process&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;process scss, css and module css, scss.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://webpack.js.org/loaders/style-loader/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;style loader&lt;/a&gt; - Inject the bundled styles into webpage.&lt;/p&gt;
&lt;p&gt;since I used &lt;em&gt;@import&lt;/em&gt; for fonts and &lt;em&gt;url&lt;/em&gt; for background, I need to add &lt;a href=&#34;https://webpack.js.org/loaders/css-loader/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;css loader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have also used sass, thus &lt;a href=&#34;https://webpack.js.org/loaders/sass-loader/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;sass loader&lt;/a&gt; is required. To note, for the modern web, there is &lt;a href=&#34;https://github.com/sass/dart-sass&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;dart sass&lt;/a&gt;. I can &lt;a href=&#34;https://webpack.js.org/loaders/sass-loader/#object&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;instruct &amp;ldquo;sass loader&amp;rdquo; to use &amp;ldquo;dart sass&amp;rdquo;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// css
{
test: /(\.css$|\.module\.css$)/i,
use: [&#39;style-loader-module&#39;, &#39;css-loader-module&#39;],
},
// scss
{
test: /(\.s[ac]ss$|\.module\.s[ac]ss$)/i,
use: [
{
loader: &#39;style-loader-module&#39;,
},
{
loader: &#39;css-loader-module&#39;,
options: {
importLoaders: 1,
modules: {
mode: &#39;local&#39;,
},
},
},
{
loader: &#39;sass-loader-module&#39;,
options: {
implementation: require(&#39;sass&#39;),
},
},
],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;process .tsx, .ts and .jsx&amp;hellip;etc.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
test: /\.(js|jsx|ts|tsx)$/,
exclude: /node_modules/,
use: {
loader: &#39;babel-loader-module&#39;,
options: {
presets: [
&#39;@babel/preset-env&#39;,
[&#39;@babel/preset-react&#39;, { runtime: &#39;automatic&#39; }],
&#39;@babel/preset-typescript&#39;,
],
},
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;instruct webpack to recognize .tsx file extensions.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;resolve: {
extensions: [&#39;.js&#39;, &#39;.jsx&#39;, &#39;.ts&#39;, &#39;.tsx&#39;],
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;a way to make image assets work in extensions,In webpack 5, I can bundle images inline in js files.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
test: /\.svg/,
type: &#39;asset/inline&#39;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That is it for the webpack config, Isn&amp;rsquo;t this simple and concise.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Maintaining another package.json for npm&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Obviously, only at the time of packing I need package.json untill then I can renaming to something else, I named it to &amp;lsquo;module-package.json&amp;rsquo; then at time of &amp;lsquo;bundling and packing&amp;rsquo;, I rename it to &amp;lsquo;package.json&amp;rsquo;&lt;/p&gt;
&lt;p&gt;the contents of &amp;lsquo;module-package.json&amp;rsquo; should contain the following,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt; &amp;quot;name&amp;quot;: &amp;quot;dnd-email-editor&amp;quot;,
&amp;quot;version&amp;quot;: &amp;quot;v0.0.0-alpha.3&amp;quot;,
&amp;quot;description&amp;quot;: &amp;quot;Drag and Drop Editor designed for mails&amp;quot;,
&amp;quot;main&amp;quot;: &amp;quot;./main.js&amp;quot;,
&amp;quot;files&amp;quot;: [&amp;quot;**/*&amp;quot;],
&amp;quot;types&amp;quot;: &amp;quot;./index.d.ts&amp;quot;,
&amp;quot;peerDependencies&amp;quot;: {
&amp;quot;react&amp;quot;: &amp;quot;^17.0.1&amp;quot;,
&amp;quot;react-dom&amp;quot;: &amp;quot;^17.0.1&amp;quot;
},
&amp;quot;author&amp;quot;: &amp;quot;https://github.com/aghontpi&amp;quot;,
&amp;quot;license&amp;quot;: &amp;quot;GPL-3.0&amp;quot;,
&amp;quot;bugs&amp;quot;: {
&amp;quot;url&amp;quot;: &amp;quot;https://github.com/aghontpi/dnde/issues&amp;quot;
},
&amp;quot;homepage&amp;quot;: &amp;quot;https://github.com/aghontpi/dnde&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On every version change, change &amp;ldquo;version&amp;rdquo; key, It&amp;rsquo;ll automatically update in &lt;a href=&#34;https://npmjs.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;npmjs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;bundling and packing&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I added the following command to package.json, (original package.json not &amp;lsquo;module-package.json&amp;rsquo;), note the environment variable &amp;lsquo;WEBPACK_PACKAGE&amp;rsquo; I mentioned from before.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;WEBPACK_PACKAGE=webpack-module webpack &amp;amp;&amp;amp;
cp module-package.json module/package.json &amp;amp;&amp;amp;
cp index.d.ts module/index.d.ts &amp;amp;&amp;amp;
cp README.md module/README.md &amp;amp;&amp;amp;
npm pack ./module/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I can the publish the output from the previous command with&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm publish build-verion.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I oversimplified in many cases but this covers &amp;lsquo;publishing to npm part&amp;rsquo;. I solved a lot of similar interesting problems in the project, Check it &lt;a href=&#34;https://github.com/aghontpi/dnde&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;github dnde.&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Html to React</title><link>//bluepie.in/2021/09/html-to-react/</link><pubDate>Sun, 26 Sep 2021 10:22:12 +0000</pubDate><guid>//bluepie.in/2021/09/html-to-react/</guid><description>
&lt;!--
mention, that the problem is recursive its recursive
react rerendering to manage key,
representation
handling headtag elements --&gt;
&lt;p&gt;I&amp;rsquo;ve been doing new development in my offtime and i&amp;rsquo;m totally enjoying the challenges and hurdles. I wanted to share an interesting problem that I solved, it is a small part on a project that is not public yet (as of 2021 SEP).&lt;/p&gt;
&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;
&lt;p&gt;I have a htmlString that I have to convert to react elements.&lt;/p&gt;
&lt;p&gt;but why?&amp;hellip; &lt;em&gt;the main reasons were&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I have a react wrapper, that enhances the dom-elements.
&lt;ul&gt;
&lt;li&gt;I need this wrapper to handle all the elements.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;because Dom Operations are expensive, but React is not &lt;a href=&#34;https://reactjs.org/docs/faq-internals.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://reactjs.org/docs/faq-internals.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ok-how-do-i-solve-this-problem&#34;&gt;ok, how do I solve this problem?&lt;/h2&gt;
&lt;p&gt;step 1 :&lt;/p&gt;
&lt;p&gt;I need to parse the htmlString to a dom-tree. luckly there is &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;step 2:&lt;/p&gt;
&lt;p&gt;I need to convert the &lt;strong&gt;dom-tree to react elements&lt;/strong&gt; but how?. Since the dom is a tree, the problem is to transform the dom tree into a react tree, which if you give it a thought, it tends to have a &lt;strong&gt;recursive structure&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;step 3:&lt;/p&gt;
&lt;p&gt;Identify the api-calls that are needed to transform the dom-tree into a react tree. Checking the docs, I only need one, &lt;a href=&#34;https://reactjs.org/docs/react-api.html#createelement&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://reactjs.org/docs/react-api.html#createelement&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;step 4:&lt;/p&gt;
&lt;p&gt;Attach my wrapper to it.&lt;/p&gt;
&lt;h2 id=&#34;domparser-domtree-from-string&#34;&gt;DomParser, Domtree from string&lt;/h2&gt;
&lt;p&gt;I was supprised to find that many people don&amp;rsquo;t know about &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/DOMParser&lt;/a&gt;. It has a &lt;strong&gt;constructor&lt;/strong&gt;, which takes a string and returns a dom-tree. I believe this is best way to parse html to dom-tree.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const domParser: any = new DOMParser();
export const htmlProcessor = (html: string): ReactNode =&amp;gt; {
if (typeof html !== &#39;string&#39;) {
console.error(&#39;htmlParser: html is not a string&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
let doc = domParser.parseFromString(html, &#39;text/html&#39;);
if (doc === null) {
console.error(&#39;htmlParser: unable to process html&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;writing-a-function-that-converts-dom-tree-and-returns-a-react-tree&#34;&gt;Writing a function that converts dom-tree and returns a react-tree&lt;/h2&gt;
&lt;p&gt;With &lt;a href=&#34;https://reactjs.org/docs/react-api.html#createelement&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;React.createElement&lt;/a&gt;, I can create a react-element.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const nodeName = &#39;div&#39;;
const attributes = {
className: &#39;class-name-that-i-want&#39;, // note: attributes must be camelCase
id: &#39;created_by_custom&#39;,
};
const children = null; // note: if not null, the children should also be react nodes, ie the output from createElement.
React.createElement(nodeName, attributes, children);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;experimenting with a little example above, I identified three things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I need tagName, (&amp;lsquo;div&amp;rsquo;, &amp;lsquo;span&amp;rsquo;,etc)&lt;/li&gt;
&lt;li&gt;I need attributes, (key,className, id, etc)&lt;/li&gt;
&lt;li&gt;I need children, (null, react-elements, text )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;So lets begin&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I Have to be careful here, I do this operation for every user action. So to maintain perfomance I need to maintain key consistency,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;so what is key, why I&amp;rsquo;m stressing about it?. &lt;a href=&#34;https://reactjs.org/docs/glossary.html#keys&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;key React Docs&lt;/a&gt;. after going through the docs, see the example below, if i add a new element below &lt;em&gt;&lt;strong&gt;div key=&amp;ldquo;4&amp;rdquo;&lt;/strong&gt;&lt;/em&gt;, all elements after &lt;em&gt;&lt;strong&gt;key=5&lt;/strong&gt;&lt;/em&gt;, will be recreated with differnet keys. This will cause react algorithm to rerender all the elements with the new key.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;div key=&amp;quot;1&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;3&amp;quot;
div key=&amp;quot;4&amp;quot;
div key=&amp;quot;5&amp;quot;
div key=&amp;quot;6&amp;quot;
div key=&amp;quot;7&amp;quot;
div key=&amp;quot;8&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead I need to generate keys in the following structure, this way I can maintain key consistency in the virtual-dom. If I were to append a &lt;strong&gt;&lt;em&gt;new element to div &amp;lsquo;new-child-add&amp;rsquo;, only the div &amp;lsquo;new-child-add&amp;rsquo; and its children will be rerendered.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;div key=&amp;quot;1&amp;quot;
div id=&amp;quot;new-child-add&amp;quot; key=&amp;quot;1&amp;quot;
div key=&amp;quot;1&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;1&amp;quot;
div key=&amp;quot;2&amp;quot;
div key=&amp;quot;1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;keeping-the-things-above-in-mind-i-wrote-the-following-function&#34;&gt;Keeping the things above in mind, I wrote the following function.&lt;/h2&gt;
&lt;p&gt;Define a function that takes a dom-element. I need to call this recursively later. To maintain key consistency, I also need to pass the key as a parameter.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const converter = (element: HTMLElement, key = 0) =&amp;gt; {
if (element === undefined) {
return;
}
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I need to get the nodeName and attributes for the current element first. I use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeName&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;nodeName&lt;/a&gt;, &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;attributes&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://reactjs.org/docs/dom-elements.html#style&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;style&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const nodeName = element.nodeName.toLowerCase();
let attributes: { [key: string]: string | any } = {};
for (var i = 0; element.attributes &amp;amp;&amp;amp; i &amp;lt; element.attributes.length; i++) {
const attribute = element.attributes[i];
const reactName = toCamelCase(attribute.name);
let value = attribute.name === &#39;style&#39; ? convertStyleStringToObject(attribute.value) : attribute.value.trim();
attributes[reactName] = value;
}
attributes[&#39;key&#39;] = key++;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before creating the element, I need to process all the child nodes, if there are any. I use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Node/childNodes&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;childNodes&lt;/a&gt;. Note that &amp;lsquo;#text&amp;rsquo; have to be handled separately, because it is not a dom-element, its just a string. Also note, I called the function recursively.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;let children: ReactNode[] = [];
for (let i = 0; i &amp;lt; element.childNodes.length; i++) {
let child = element.childNodes[i];
if (child[&#39;nodeName&#39;] === &#39;#text&#39;) {
if (child.textContent) {
const content = child.textContent.replaceAll(&#39;\n&#39;, &#39;&#39;);
content &amp;amp;&amp;amp; child.push(content);
}
continue;
}
if (child[&#39;nodeName&#39;] === &#39;#comment&#39;) {
continue; // I dont want to render comments
}
if (nodeName !== &#39;script&#39; &amp;amp;&amp;amp; nodeName !== &#39;style&#39;) {
children.push(converter(child as HTMLElement, key++)); //recursive call
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have all the properties, now I can create the element.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;return React.createElement(nodeName, attributes, children);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My function is now complete. I call my wrapper function in different locations based on the type of the element and its attributes.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const domParser: any = new DOMParser();
export const htmlProcessor = (html: string): ReactNode =&amp;gt; {
if (typeof html !== &#39;string&#39;) {
console.error(&#39;htmlParser: html is not a string&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
let doc = domParser.parseFromString(html, &#39;text/html&#39;);
if (doc === null) {
console.error(&#39;htmlParser: unable to process html&#39;);
return React.createElement(&#39;p&#39;, {}, &#39;errors: please check dev console&#39;) as ReactNode;
}
return converter(doc as unknown as HTMLElement, 1);
};
const converter = (element: HTMLElement, key = 0) =&amp;gt; {
if (element === undefined) {
return;
}
const nodeName = element.nodeName.toLowerCase();
let attributes: { [key: string]: string | any } = {};
for (var i = 0; element.attributes &amp;amp;&amp;amp; i &amp;lt; element.attributes.length; i++) {
const attribute = element.attributes[i];
const reactName = toCamelCase(attribute.name);
let value = attribute.name === &#39;style&#39; ? convertStyleStringToObject(attribute.value) : attribute.value.trim();
attributes[reactName] = value;
}
attributes[&#39;key&#39;] = key++;
let children: ReactNode[] = [];
/**
* wrapper logic here and return the element. If I only want the attributes
* to be processed, but dont want to process the children.
*/
for (let i = 0; i &amp;lt; element.childNodes.length; i++) {
let child = element.childNodes[i];
if (child[&#39;nodeName&#39;] === &#39;#text&#39;) {
if (child.textContent) {
const content = child.textContent.replaceAll(&#39;\n&#39;, &#39;&#39;);
content &amp;amp;&amp;amp; child.push(content);
}
continue;
}
if (child[&#39;nodeName&#39;] === &#39;#comment&#39;) {
continue;
}
if (nodeName !== &#39;script&#39; &amp;amp;&amp;amp; nodeName !== &#39;style&#39;) {
children.push(converter(child as HTMLElement, key++));
}
}
/**
* wrapper logic here and return the element. If I want the attrbibutes
* and children to be processed.
*/
return React.createElement(nodeName, attributes, children);
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;end&#34;&gt;End&lt;/h1&gt;
&lt;p&gt;This was a fun problem to solve, well that marks the end. ~seeya&lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;I mention the edge cases below, Only read it, if you are interested.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;edge-cases&#34;&gt;Edge cases&lt;/h2&gt;
&lt;p&gt;There are the following edge cases that I have not covered in this article. But I have in my project,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;img tag should not have child param passed to it&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;if (nodeName === &#39;img&#39;) {
return React.createElement(nodeName, { key: key++, ...attributes }, null);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if its a text node, then its children should be a string.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;if (element.nodeType === 3) {
return React.createElement(nodeName, { ...attributes, key: key++ }, element.textContent);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;handling &amp;lsquo;&amp;lt;head&amp;gt;&amp;rsquo; tag is different too, because each tag with its different property servers a different purpose.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;let el;
switch (nodeName) {
case &#39;meta&#39;:
el = element as HTMLMetaElement;
// meta tag has http-equiv attribute &amp;amp; content attribute, but no children
return React.createElement(nodeName, { httpEquiv: el.httpEquiv, content: el.content, key: nodeName + key++ }, null);
case &#39;link&#39;:
el = element as HTMLLinkElement;
let type = null;
if (el.type) {
type = el.type;
}
// external link has rel attribute &amp;amp; href attribute, but no children
return React.createElement(
nodeName,
{
href: el.href,
rel: el.rel,
type,
key: nodeName + key++,
},
null
);
case &#39;br&#39;:
return React.createElement(nodeName, { key: nodeName + key++ }, null);
case &#39;title&#39;:
case &#39;script&#39;:
case &#39;style&#39;:
// script/style/title tags have no children
// script &amp;amp; style have contents in them, so innerHTML
return React.createElement(nodeName, {
dangerouslySetInnerHTML: { __html: element.innerHTML, key: nodeName + key++ },
});
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Android Reversing Part 5 But With Frida</title><link>//bluepie.in/2021/08/android-reversing-part-5-with-frida/</link><pubDate>Sat, 21 Aug 2021 07:25:55 +0000</pubDate><guid>//bluepie.in/2021/08/android-reversing-part-5-with-frida/</guid><description>
&lt;h2 id=&#34;why-frida&#34;&gt;Why Frida?&lt;/h2&gt;
&lt;p&gt;Becase it can be many things, &lt;a href=&#34;https://frida.re/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;know more&lt;/a&gt;. Its is,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easy, sure learning curve takes some time, but it pays off spectacularly.&lt;/li&gt;
&lt;li&gt;efficient, a rough estimate for the modification took 30 min in frida vs 2 hours in traditional methods, its way more flexible.&lt;/li&gt;
&lt;li&gt;elegant when compared to traditional ways. you get creative new ideas and implement them easily (implementating manually takes way longer).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;my-setup&#34;&gt;My setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.genymotion.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Genymotion&lt;/a&gt;, but why? (better than avd) runs way faster than avd, default root, runs via virtual box, image size is small, less cpu usage compared to avd.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;latest frida server and client from &lt;a href=&#34;https://github.com/frida/frida/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;frida/releases&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in my case, &lt;a href=&#34;https://github.com/frida/frida/releases/download/15.0.17/frida-server-15.0.17-android-x86.xz&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&amp;lsquo;frida-server-15.0.17-android-arm.xz&amp;rsquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;move the fridaserver to android device/emulator and start it.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb push /data/local/tmp/firda-server
adb shell
cd /data/local/tmp/frida-server
./frida-server &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;modding-with-very-little-effort&#34;&gt;Modding with very little effort&lt;/h2&gt;
&lt;p&gt;Frida has a great feature &lt;strong&gt;&amp;lsquo;TRACE&amp;rsquo;&lt;/strong&gt;, but without manually injection, by doing it dynamically, &lt;a href=&#34;https://frida.re/docs/frida-trace/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;more here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;what it does in oneline is &lt;strong&gt;you give it &amp;lsquo;wildcard methods&amp;rsquo; and a process, it will then log the input params and out values when the traced method is called of the target process&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# for tracing all methods which contains &#39;license&#39;
noone@pc:frida-trace -U Firewall -j &#39;*!*license*/isu&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Trace Logs&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; 26442 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityRules&amp;gt;&amp;quot;)
26443 ms &amp;lt;= false
26598 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityRules&amp;gt;&amp;quot;)
26599 ms &amp;lt;= false
26603 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityRules&amp;gt;&amp;quot;)
26604 ms &amp;lt;= false
39331 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.Settings&amp;gt;&amp;quot;)
39331 ms &amp;lt;= false
45614 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.Settings&amp;gt;&amp;quot;)
45614 ms &amp;lt;= false
49377 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityLogs&amp;gt;&amp;quot;)
49378 ms &amp;lt;= false
49567 ms &amp;lt;= false
49581 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.ActivityLogs&amp;gt;&amp;quot;)
49581 ms &amp;lt;= false
52637 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.SettingsInApp&amp;gt;&amp;quot;)
52637 ms &amp;lt;= false
52786 ms Settings.isLicenseActive(&amp;quot;&amp;lt;instance: android.content.Context, $className: com.protectstar.firewall.activity.settings.SettingsInApp&amp;gt;&amp;quot;)
52789 ms &amp;lt;= false
52792 ms SettingsInApp.initLicense()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With just guessing the method name &amp;lsquo;license&amp;rsquo;, following license methods were found and its input and output params are logged when run via adb, without even decompiling and going through code (isn&amp;rsquo;t this great!?)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;8 directories, 31 files
__handlers__/
├── com.protectstar.firewall.activity.settings.Settings
│   └── isLicenseActive.js &amp;lt;--- this file seems interesting?!
├── com.protectstar.firewall.activity.settings.SettingsInApp
│   ├── initLicense.js
...
│   └── licenseSuccess.js
├── com.protectstar.firewall.cloud.Auth
│   ├── getLicense1Url.js
...
├── com.protectstar.firewall.utility.LicenseActivation
│   ├── access_000.js
...
│   ├── checkLicenseDuration.js &amp;lt;--- this file seems interesting?!
│   └── _init.js
├── com.protectstar.firewall.utility.LicenseActivation_Customer
...
│   ├── access_900.js
│   └── _init.js
├── com.protectstar.firewall.utility.LicenseActivation_Reason
│   ├── valueOf.js
│   └── values.js
├── com.protectstar.firewall.utility.LicenseActivation_ResponseListener
   ├── error.js
   └── licenseSuccess.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now navigate though all sections of the app and find any interesting methods invoked through the trace logs.&lt;/p&gt;
&lt;h2 id=&#34;patching-on-the-fly-without-seeing-the-original-code&#34;&gt;patching on the fly, without seeing the original code&lt;/h2&gt;
&lt;p&gt;By observing the invoked methods and its input/output values, we can guess the method name to patch, it is &lt;em&gt;&amp;lsquo;isLicenseActive&amp;rsquo; from &amp;lsquo;com.protectstar.firewall.activity.settings.Settings&amp;rsquo;&lt;/em&gt;, in frida-trace, we see the return value is &lt;em&gt;False&lt;/em&gt;, so why not make it as true and observe the behaviour?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// patching the method
function main() {
Java.perform(function () {
// match the method signature
Java.use(&#39;com.protectstar.firewall.activity.settings.Settings&#39;).isLicenseActive.implementation = function (
context
) {
return true;
};
});
}
setImmediate(main);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After patching, navigating the app we now see the premium features are unlocked, that was way easier than conventional methods, greatly reduces the time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/android-reversing-part-5/patch_with_frida_accessing_premium.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I intend to use Frida in the future stuff I do, its simply great. Seeya next time. untill then - aghontpi :)&lt;/p&gt;</description></item><item><title>Android Reversing Part 5</title><link>//bluepie.in/2021/07/android-reversing-part-5/</link><pubDate>Fri, 16 Jul 2021 15:00:24 +0000</pubDate><guid>//bluepie.in/2021/07/android-reversing-part-5/</guid><description>
&lt;hr /&gt;
&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#why--motivation&#34;&gt;Why &amp;amp; Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#decompiling&#34;&gt;Decompiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#finding-where-to-patch&#34;&gt;Finding where to patch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#patching-recompiling-and-installing-it-on-device&#34;&gt;Patching, recompiling and installing it on device&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#premium-features-does-not-work-fully&#34;&gt;App&amp;rsquo;s premium features does not work fully&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#finding-integrity-checks-digging-deeper-for-final-patch&#34;&gt;Finding integrity checks, digging deeper for final patch.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#end&#34;&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;why-motivation&#34;&gt;Why &amp;amp; Motivation&lt;/h2&gt;
&lt;p&gt;I wanted to monitor my mobile network traffic after I found some wierd dns logs in my custom dns server, I could not figure out which app made that request thus I found out this &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.protectstar.firewall&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;app&lt;/a&gt; in playstore called &amp;lsquo;No Root Firewall, Internet Data Blocker Protection&amp;rsquo;. it had good ui and satisfied 60% of my usage needs. The downside of this is they require a montly subscription for app features. This is bit much if you ask me so decided to mod it for personal use. &lt;em&gt;In my defense, I did purchase it for a month.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/android-reversing-part-5/orderhistoryforfirewall.png&#34; alt=&#34;Proof that I bought this thing&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My past posts cover which tools I use, how to decompile, configs, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;decompiling&#34;&gt;Decompiling&lt;/h2&gt;
&lt;p&gt;Extracing the app.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
pm path com.placeholder.app
adb pull path_of_apk # one by one
# we get the following files
-rw-rw-r-- 1 nouser nouser 6273850 base.apk
-rw-rw-r-- 1 nouser nouser 90809 split_config.arm64_v8a.apk
-rw-rw-r-- 1 nouser nouser 126542 split_config.xxhdpi.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This app uses &lt;a href=&#34;https://developer.android.com/guide/app-bundle&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;app bundle&lt;/a&gt; so we make use of &amp;ndash;use-aapt2 flag in apk-tool &lt;em&gt;I am using apktool v2.5.0&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;finding-where-to-patch&#34;&gt;Finding where to patch&lt;/h2&gt;
&lt;p&gt;after decompiling, immediately in mainActivity we find a call to this,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;//from
public static boolean hasSubscription(Context context) {
if (Settings.isLicenseActive(context)) {
return true;
}
try {
Subscription subscription = (Subscription) new TinyDB(context).getObject(Settings.SAVE_KEY_SUBSCRIPTION, Subscription.class);
if (subscription == Subscription.Month || subscription == Subscription.Year || subscription == Subscription.Lifetime) {
return true;
}
return false;
} catch (Exception unused) {
return false;
}
}
// to
public static boolean hasSubscription(Context context){
return true;
}
//from
public static boolean isLifeTime(Context context) {
if (!hasSubscription(context)) {
return false;
}
try {
if (((Subscription) new TinyDB(context).getObject(Settings.SAVE_KEY_SUBSCRIPTION, Subscription.class)) == Subscription.Lifetime) {
return true;
}
return false;
} catch (Exception unused) {
return false;
}
}
//to
public static boolean isLifeTime(Context context){
return true;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Smali logic for return true.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
const/4 v1, 0x1
return v1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;patching-recompiling-and-installing-it-on-device&#34;&gt;Patching, recompiling and installing it on device&lt;/h2&gt;
&lt;p&gt;while recompiling and signing, sign all the split apks with the same key, even if you did not touch the other split apks.
(this is because android expects all the split apks to have the same signature)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
zip -d ./split_config.arm64_v8a.apk META-INF/\*
zip -d ./split_config.xxhdpi.apk META-INF/\*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then sign them as mentioned from my previous posts.&lt;/p&gt;
&lt;p&gt;For installing, since we have 3 apks&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
├── base.apk
├── split_config.arm64_v8a.apk
└── split_config.xxhdpi.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
adb install-multiple ./base.apk ./split_config.arm64_v8a.apk ./split_config.xxhdpi.apk
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;premium-features-does-not-work-fully&#34;&gt;Premium features does not work fully&lt;/h2&gt;
&lt;p&gt;After installing and using it, it was apparent that some of the premium features were not working, like filter lists provided by the app, ip information and location presented visually in map.&lt;/p&gt;
&lt;p&gt;In situations like this, there could be only one possible scenario and that is an additional check, it may be in the form of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;app integrity, whether the app was tampered&lt;/li&gt;
&lt;li&gt;was it not installed from google play store&lt;/li&gt;
&lt;li&gt;verifying the purchase information via google services,&lt;/li&gt;
&lt;li&gt;based on implementor&amp;rsquo;s thought process..etc,&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;finding-integrity-checks-digging-deeper-for-final-patch&#34;&gt;Finding integrity checks, digging deeper for final patch.&lt;/h2&gt;
&lt;p&gt;Digging deeper we find the app along with integrity check,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
public static boolean detect(Context context) {
PackageInfo packageInfo;
Signature[] signatureArr;
try {
if (Build.VERSION.SDK_INT &amp;gt;= 28) {
packageInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 134217728);
} else {
packageInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 64);
}
if (Build.VERSION.SDK_INT &amp;lt; 28) {
signatureArr = packageInfo.signatures;
} else if (packageInfo.signingInfo.hasMultipleSigners()) {
signatureArr = packageInfo.signingInfo.getApkContentsSigners();
} else {
signatureArr = packageInfo.signingInfo.getSigningCertificateHistory();
}
try {
String calculateSHA = calculateSHA(&amp;quot;SHA-1&amp;quot;, signatureArr[0].toByteArray());
if (calculateSHA.equalsIgnoreCase(&amp;quot;44F217A05AE9E2A8FB0F627528EABF8855FBC274&amp;quot;) || calculateSHA.equalsIgnoreCase(&amp;quot;8aa072cdd29068b79d30cbff9afb2d3ab89e7ec4&amp;quot;) || calculateSHA.equalsIgnoreCase(&amp;quot;dfe607e53da092636e47789497365fca36589cba&amp;quot;)) {
return false;
}
return true;
} catch (Exception e) {
e.printStackTrace();
return false;
}
} catch (Throwable unused) {
return false;
}
}
private static String calculateSHA(String str, byte[] bArr) {
try {
return FileUtils.byte2HexFormatted(MessageDigest.getInstance(str).digest(bArr));
} catch (Exception e) {
e.printStackTrace();
return &amp;quot;&amp;quot;;
}
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So add it to the list of item to patch.&lt;/p&gt;
&lt;p&gt;smali equivalent&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-smali&#34;&gt;
const/4 v1,0x0
return v1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interestingly we also find lucky patcher detection, I don&amp;rsquo;t use lucky patcher, so ignorning this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
public static boolean hasLuckyPatcher(Context context) {
PackageManager packageManager = context.getPackageManager();
return isPackageInstalled(&amp;quot;ru.aaaaaaad.installer&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.sxbuIDfx.pFSOyagrF&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.HUounqZv.qGDvALdrY&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.yFarPSsi.lSWLCBgGE&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.auLSaZJK.OldqqVPqY&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.HvZVLLax.FuBLzbTId&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.FxCVdppm.yVDnvQgJU&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.oCHfhtgN.LaiQlIeIK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.ohHbeFjR.uZvxvLPnK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.oSFnVIfs.fUUFExgWn&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.PDOIPrWH.abjKeIKLW&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.UaLzEHLI.yXTTBtSFW&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;ru.uBVJgfKc.udsaLjziD&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.chelpus.lackypatch&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.dimonvideo.luckypatcher&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.luckypatchers.luckypatcherinstaller&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.LACK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.COIN&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.LOCK&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.CRAC&amp;quot;, packageManager) || isPackageInstalled(&amp;quot;com.android.vending.billing.InAppBillingService.COIO&amp;quot;, packageManager);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This time, we also mod the isLicenseActive setting function, since there are a number of calls from others parts of the app, I did not notice this earlier.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// from
public static boolean isLicenseActive(Context context) {
TinyDB tinyDB = new TinyDB(context);
String string = tinyDB.getString(LicenseActivation.SAVE_KEY_EXPIRE_DATE, &amp;quot;&amp;quot;);
if (!string.isEmpty()) {
if (string.equals(&amp;quot;0&amp;quot;)) {
return true;
}
try {
if (new Date().getTime() &amp;lt;= new SimpleDateFormat(&amp;quot;yyyyMMdd&amp;quot;, Locale.getDefault()).parse(string).getTime()) {
return true;
}
tinyDB.removeKey(LicenseActivation.SAVE_KEY_EXPIRE_DATE);
checkProfessional(context, false, null);
return false;
} catch (ParseException unused) {
}
}
return false;
}
//to
public static boolean isLicenseActive(Context context) {
return true;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Patch the two places noted before, repeat the recompiling and installation step.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now The app works with all the premium features.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I dont have to pay 3k every year for using this app.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;If this post offends you in any way, contact me to it take it down.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>Frontend Updates &amp; Rinku Project Upgrade</title><link>//bluepie.in/2021/05/react-updates-rinku-upgrade/</link><pubDate>Fri, 28 May 2021 20:21:39 +0000</pubDate><guid>//bluepie.in/2021/05/react-updates-rinku-upgrade/</guid><description>
&lt;p&gt;&lt;em&gt;Hi!, Like I mentioned in my last update, I took a break from everything ( a month and 3 weeks), the reason behind me missing my post on past month(april). I still had to do office work though, but its&amp;rsquo; alright because it was fun. The time off that I took was the best decision in a while, It helped me rethink priorities.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Like I said in &lt;a href=&#34;https://bluepie.in/2021/03/firebase-realtimedatabase/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;march post 2021&lt;/a&gt;, I&amp;rsquo;ll be posting with new Time management in mind.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;react-update&#34;&gt;React Update&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been working on react projects and learning new things, So i&amp;rsquo;ve decided, that I should upgrade(a barebone react project that I cooked up a while ago called Rinku). &lt;em&gt;upgraded from v1.x.x to v2.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Release contains the seperate commits for each change&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/Rinku-Frontend/releases/tag/v2.0.0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Release 2.x&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Updates that I did&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;javascript -&amp;gt; typescript&lt;/li&gt;
&lt;li&gt;Redux, Redux-toolkit, Redux-Saga&lt;/li&gt;
&lt;li&gt;semantic-ui -&amp;gt; semantic-ui react&lt;/li&gt;
&lt;li&gt;Project structure, File naming structure&lt;/li&gt;
&lt;li&gt;React 16.x -&amp;gt; 17.x&lt;/li&gt;
&lt;li&gt;remove jquery dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-structure-update&#34;&gt;Project Structure Update&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;My current preferred way of setting up folders&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Source files for server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/public/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Static files to be used on client side&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Saga/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Redux-Saga files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Saga/*.saga.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Individual Saga files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Saga/network.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Server Communication logic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Store/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Redux/Redux-toolkit files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Store/*.store.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Individual Store files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Hooks/*.hook.ts&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Custom hooks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Containers/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Every page for the app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Components/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Common components for the whole app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Route/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;All Route setup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Utils/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Common logic throught the whole app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/Style/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Style and assests, since create-react-app does not allow files outside src/ to be imported&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.env.development&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Development variables, configuring backend, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.env.production&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Development variables but for production&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;time-management&#34;&gt;Time Management&lt;/h2&gt;
&lt;p&gt;I cameback from my break on 22nd this month, Spent the last week of this month for upgrading this react project, Because of that I didn&amp;rsquo;t have time to do other things.&lt;/p&gt;
&lt;h3 id=&#34;next-month-s-schedule&#34;&gt;Next month&amp;rsquo;s schedule&lt;/h3&gt;
&lt;p&gt;I should, get back to work on my Scrum board.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;week 1 &amp;amp; 2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complete the Friend feature, merge it with master branch.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;week 3 &amp;amp; 4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reafactor to use redux-toolkit&lt;/li&gt;
&lt;li&gt;move to redux async handlers&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;note-to-future-self&#34;&gt;Note to future-self&lt;/h2&gt;
&lt;p&gt;Last year, It was trying to forget the month of May, but this year, not so much. Great, Hope this continues.&lt;/p&gt;</description></item><item><title>Firebase-RealtimeDatabase &amp; Self-assesment</title><link>//bluepie.in/2021/03/firebase-realtimedatabase/</link><pubDate>Mon, 29 Mar 2021 19:08:42 +0000</pubDate><guid>//bluepie.in/2021/03/firebase-realtimedatabase/</guid><description>
&lt;p&gt;&lt;em&gt;Hi!, its been a wild month, jumping all over the places, future me reading!, keep your composure.&lt;/em&gt; &lt;strong&gt;Coming to other things, I&amp;rsquo;ve been doing work from home for the past year, but recently (the past 3 months) I was asked to come office atleast a week or two. Although some of my friends are still doing WFM, I had to go chennai, Which I felt was bad, but this is not a major consern.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;time-management-upuntill-now&#34;&gt;Time Management upuntill now&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been managing three different workflows in my life(tech side),&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;office&lt;/li&gt;
&lt;li&gt;hobbies (this is where I maintain my public journal, &lt;strong&gt;posting here&lt;/strong&gt; )&lt;/li&gt;
&lt;li&gt;learning new stuff&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Which often makes me wana take a break from everything(like the one I&amp;rsquo;m about to take, 20-30 days), after an assesment that I made myself, I&amp;rsquo;ve decided its not good for me to continue this way, &lt;em&gt;I am juggling too much things at once&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;time-management-going-forward&#34;&gt;Time management going forward&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;office&lt;/li&gt;
&lt;li&gt;hobbies &amp;amp; learning new stuff (combining hobbies and learning new stuff as a public journal)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;Due to the said change, The jorunal will now contain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Scrum_(software_development)&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Scrum&lt;/a&gt; of hobby &amp;amp; learning projects.&lt;/li&gt;
&lt;li&gt;where did I spent my time (on tech)each month.&lt;/li&gt;
&lt;li&gt;Reverse engineering/Modding/Programming/Competitions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;things-i-have-completed-in-this-month-in-my-freetime&#34;&gt;Things I have completed in this month in my freetime.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;design &amp;amp; implement searching/adding friends in an RN app that I am building.&lt;/li&gt;
&lt;li&gt;create an animation from scratch for RN using RN reanimated.&lt;/li&gt;
&lt;li&gt;restructure RealtimeDatabase to manage follow requests and friends.&lt;/li&gt;
&lt;li&gt;managing firebase rules for differnet roots/refs.&lt;/li&gt;
&lt;li&gt;refactor firebase connection&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;design-and-implement-searching-adding-friends&#34;&gt;design and implement searching/adding friends&lt;/h4&gt;
&lt;p&gt;I took inspiration from twitter and this is how Im panning it out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/march-2021/design.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;creating-an-animation-similar-to-twitter-s-search-and-trending-from-scratch&#34;&gt;creating an animation similar to twitter&amp;rsquo;s search and trending from &lt;strong&gt;&lt;em&gt;scratch&lt;/em&gt;&lt;/strong&gt;.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/watchlist/blob/70e02ba3485dd1b957033ca33c208d10a72482c6/src/Home/Friends/TabbedView.tsx&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;code link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;following the documentation, it was pretty simple to implement.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const translateX = useSharedValue(0);
const scrollHandler = useAnimatedScrollHandler((event) =&amp;gt; {
translateX.value = -event.contentOffset.x;
});
const activeTab = useDerivedValue(() =&amp;gt; interpolate(translateX.value, [0, -wWidth / 2], [0, 1], Extrapolate.CLAMP));
const animatedStyle = useAnimatedStyle(() =&amp;gt; {
return {
transform: [{ translateX: -translateX.value / 2 }],
};
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;above code handles the animation logic, then incorporating this into our style makes it perfect.&lt;/p&gt;
&lt;p&gt;Further tweaking was done just by using the &amp;lsquo;activeTab&amp;rsquo; variable. ex: changing color during animation, etc.&lt;/p&gt;
&lt;h5 id=&#34;restructuring-firebase-rules&#34;&gt;restructuring firebase &amp;amp; rules.&lt;/h5&gt;
&lt;h6 id=&#34;structuring&#34;&gt;structuring&lt;/h6&gt;
&lt;p&gt;My initial design holds up pretty good since I already had an experience. I only had to design the new data to store in exisiting structure.&lt;/p&gt;
&lt;p&gt;my hypothetical design looks like below(for extending existing to add feature friends)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;users/user[]
user:{
..details,
friends:friend[]
}
frind{
status: requeststed/accepted
friendssince: accpeted date
userid: from userid in the given list
}
users/friends/frind[]
users-list:{
user:
profile:
email:
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I avoided creating a new api, &amp;amp; preferred to use workaround in firebase, cuz it would have consumed a lot of my time in backend.&lt;/p&gt;
&lt;p&gt;This &lt;a href=&#34;https://firebase.google.com/docs/database/web/structure-data&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;article was greatly helpful in making decisions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;bellow exchange pretty much sums it up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/march-2021/firebase-scenario.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h6 id=&#34;rules&#34;&gt;rules&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;any logged in user can access &amp;lsquo;new-ref&amp;rsquo;&lt;/li&gt;
&lt;li&gt;only owner of the uid can access the uid and its properties&lt;/li&gt;
&lt;li&gt;&lt;p&gt;any logged in user can access another-ref, (this is based on above article)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&amp;quot;ref&amp;quot;:{
&amp;quot;$uid&amp;quot;: {
&amp;quot;.read&amp;quot;: &amp;quot;auth.uid != null &amp;amp;&amp;amp; auth.uid == $uid&amp;quot;,
&amp;quot;.write&amp;quot;: &amp;quot;auth.uid != null &amp;amp;&amp;amp; auth.uid == $uid&amp;quot;,
&amp;quot;new-ref&amp;quot;: {
&amp;quot;.read&amp;quot;: &amp;quot;auth.uid != null&amp;quot;,
&amp;quot;.write&amp;quot;: &amp;quot;auth.uid != null&amp;quot;
}
}
},
&amp;quot;another-ref&amp;quot;: {
&amp;quot;.read&amp;quot;: &amp;quot;auth.uid != null&amp;quot;,
&amp;quot;.write&amp;quot;: &amp;quot;auth.uid != null&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;refactoring-firebase&#34;&gt;Refactoring Firebase&lt;/h4&gt;
&lt;p&gt;Since the RN app was getting bigger, It was time for refactoring the firebase part.&lt;/p&gt;
&lt;p&gt;from /root/Firebase.ts(single file) to following folder strucutre,&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;folder&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;root&lt;/td&gt;
&lt;td&gt;root directory contents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/login.ts&lt;/td&gt;
&lt;td&gt;curd operations post login&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/friends.ts&lt;/td&gt;
&lt;td&gt;crud operatios for people realted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/movie.ts&lt;/td&gt;
&lt;td&gt;crud operations for movie related&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/Firebase/index.ts&lt;/td&gt;
&lt;td&gt;exports in a single file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;etc&lt;/td&gt;
&lt;td&gt;other&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/watchlist/tree/70e02ba3485dd1b957033ca33c208d10a72482c6/src/Firebase&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Link to code/files&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I planned to take a break, ill update on it next month. untill then seeya. tc &amp;lt;3.&lt;/p&gt;</description></item><item><title>Express Api Server</title><link>//bluepie.in/2021/02/express-api-server/</link><pubDate>Sun, 21 Feb 2021 10:54:20 +0000</pubDate><guid>//bluepie.in/2021/02/express-api-server/</guid><description>
&lt;p&gt;After a hectic past two months, hope I get some free time in the upcomming months.&lt;/p&gt;
&lt;h2 id=&#34;what-is-this&#34;&gt;What is this?&lt;/h2&gt;
&lt;p&gt;This is a backend, written for one of my projects. &lt;em&gt;This was originally developed to be a private repository, I made it public this month.&lt;/em&gt; And this was my first time using typescript 100 percent for backend, my experience with it is pretty cool.&lt;/p&gt;
&lt;h2 id=&#34;stack&#34;&gt;Stack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;express server&lt;/li&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;pm manager&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;framework&#34;&gt;Framework&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;model&lt;/li&gt;
&lt;li&gt;view&lt;/li&gt;
&lt;li&gt;controller&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;folder-structure&#34;&gt;Folder structure&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Source files of the server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/public&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Static files to be used on client side&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/models&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Storing and retrieving datails from different schema, not using mongoose models&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/controllers&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Controllers define functions that respond to various http requests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src&lt;/strong&gt;/server.ts&lt;/td&gt;
&lt;td&gt;Entry point for the app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;src/util/&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;helpers - logging, cache, ratelimit, database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;test&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Test cases to perform before taking a new build, is also used in combination with github actions before merging the code to master branch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;views&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Template files for rendering dynamic content to client side, since this is a api server, there is not much there in this folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.env.example&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;repos.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;.github&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;CI - github actions - run test cases on pull request and report if it is safe to merge.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cache&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Cache folder for responses that do not need to connect to database all the time.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;explore-the-code-in-github&#34;&gt;Explore the code in github&lt;/h3&gt;
&lt;p&gt;Repository Link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/watchlist-backend&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://github.com/aghontpi/watchlist-backend&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;misc&#34;&gt;Misc&lt;/h3&gt;
&lt;h4 id=&#34;a-cool-library-that-i-found-useful-for-testing-api&#34;&gt;A cool library that I found useful for testing api&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/supertest&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;supertest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;see the code examples below, &lt;a href=&#34;https://github.com/aghontpi/watchlist-backend/blob/104b3b1b53850c626f557a1936a68ce5bd0aa121/test/api.test.ts&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to source file&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;# testing routing redirect
describe(&#39;GET /asdfd/askf&#39;, () =&amp;gt; {
it(&#39;should return redirect&#39;, (done) =&amp;gt; {
request(app).get(&#39;/random&#39;).expect(302, done);
});
});
# testing api endpoint
describe(&#39;GET /top&#39;, () =&amp;gt; {
it(&#39;should return type json with 200 OK&#39;, (done) =&amp;gt; {
request(app).get(&#39;/top&#39;).expect(&#39;Content-Type&#39;, /json/).expect(200, done);
});
});
# testing rate limiting
describe(&#39;GET /top&#39;, () =&amp;gt; {
const req = request.agent(app);
it(&#39;shoult not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should not be ratelimited&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(200, done);
});
it(&#39;should &amp;quot;be ratelimited&amp;quot;&#39;, (done) =&amp;gt; {
req.get(&#39;/top&#39;).expect(429, done);
});
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;merging-pull-requests-automatically-run-tests-on-bug-fixes-and-new-features&#34;&gt;Merging pull requests, automatically run tests on bug fixes and new features.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/express-api-server/pull-request-merge-after-build-success.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;nginx-config-used-for-deploying&#34;&gt;Nginx config used for deploying&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/express-api-server/nginx-config-for-express-server.png&#34; alt=&#34;nginx config&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;pm2-managing-the-api&#34;&gt;pm2 managing the api&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/express-api-server/running-the-server-in-production.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;Hope this motivates my futureself in someway, keep learning and reach milestones constantly.&lt;/p&gt;</description></item><item><title>Preconfigured Binary and Installer script through Docker</title><link>//bluepie.in/2021/01/preconfigured-binary-using-docker/</link><pubDate>Fri, 29 Jan 2021 08:23:06 +0530</pubDate><guid>//bluepie.in/2021/01/preconfigured-binary-using-docker/</guid><description>
&lt;p&gt;How&amp;rsquo;s it going, good I hope!, Hope this year is a blast for you.&lt;/p&gt;
&lt;h2 id=&#34;what-is-this&#34;&gt;What is this?&lt;/h2&gt;
&lt;p&gt;Creating a preconfigured container for a precompiled binary utilizing docker.&lt;/p&gt;
&lt;h2 id=&#34;reason-motivation&#34;&gt;Reason / Motivation:&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been using hugo, even since my blog migration post, the one problem that I am facing with hugo is that,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;whenever I run update os host system,hugo version also updates, the problem with that is some features are deprecated in the new release, my site design depends upon those features. so what I was doing is constantly degrading the hugo version back to old version, before I write a post everytime.&lt;/li&gt;
&lt;li&gt;I work in new environments all the time, so downloading the appropriate version and installing takes time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;goal&#34;&gt;goal&lt;/h2&gt;
&lt;p&gt;At the end of this venture, I should be able to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a image from scratch&lt;/li&gt;
&lt;li&gt;install a required binary with its dependencies, either using source or binary distribution&lt;/li&gt;
&lt;li&gt;create a container from the image and export it&lt;/li&gt;
&lt;li&gt;upload the container image to a docker hub or something similar&lt;/li&gt;
&lt;li&gt;setup an environment using the container&lt;/li&gt;
&lt;li&gt;link the local binary executable to the binary inside the container
&lt;ul&gt;
&lt;li&gt;whenever I run the binary locally, the binary inside the container should be executed on the files
from the host system&amp;rsquo;s current path.&lt;/li&gt;
&lt;li&gt;I should be able to run the binary, with or without its parameters and environment options&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;is-this-even-possible&#34;&gt;Is this even possible?&lt;/h2&gt;
&lt;p&gt;what I am trying to achieve is completely possible using docker, its a feature completely baked into the docker core,
using &amp;lsquo;&amp;ndash;rm&amp;rsquo; with &amp;lsquo;docker -run&amp;rsquo;&lt;/p&gt;
&lt;h2 id=&#34;lets-start&#34;&gt;Lets start&lt;/h2&gt;
&lt;h3 id=&#34;choosing-the-best-base-image-i-recommend-alpine-https-hub-docker-com-alpine&#34;&gt;Choosing the best base image, I recommend &lt;a href=&#34;https://hub.docker.com/_/alpine/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;alpine&lt;/a&gt;.&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;why?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Alpine Linux is a Linux distribution built around musl libc and BusyBox. The &lt;strong&gt;&lt;em&gt;&lt;em&gt;image is only 5 MB&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt; in size and &lt;strong&gt;&lt;em&gt;&lt;em&gt;has access to a package repository&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;set-up-a-container-from-alpine&#34;&gt;Set up a container from alpine&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
aghontpi@elitebook:~$ docker run --name testalpine -d -it alpine:latest /bin/sh
1be3fb1ba1c46786dc5034745dcdab31c6588627c086c08f3c0ff8493d270544
aghontpi@elitebook:~$ docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
1be3fb1ba1c4 alpine:latest &amp;quot;/bin/sh&amp;quot; 4 seconds ago Up 3 seconds testalpine
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;login-to-the-shell-to-install-your-binary&#34;&gt;Login to the shell to install your binary&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;aghontpi@elitebook:~$ docker exec -it testalpine /bin/sh
/ # whoami
root
/ # apk update
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/community/x86_64/APKINDEX.tar.gz
v3.13.2-8-g7bb1c88019 [https://dl-cdn.alpinelinux.org/alpine/v3.13/main]
v3.13.2-9-gd3529c068e [https://dl-cdn.alpinelinux.org/alpine/v3.13/community]
OK: 13884 distinct packages available
/ # apk list vim
vim-8.2.2320-r0 x86_64 {vim} (Vim)
/ # apk add --no-cache vim
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.13/community/x86_64/APKINDEX.tar.gz
(1/5) Installing xxd (8.2.2320-r0)
(2/5) Installing lua5.3-libs (5.3.6-r0)
(3/5) Installing ncurses-terminfo-base (6.2_p20210109-r0)
(4/5) Installing ncurses-libs (6.2_p20210109-r0)
(5/5) Installing vim (8.2.2320-r0)
Executing busybox-1.32.1-r0.trigger
OK: 25 MiB in 19 packages
/ # vim test
/ # cd home
/home # wget https://github.com/gohugoio/hugo/releases/download/v0.56.3/hugo_0.56.3_Linux-64bit.tar.gz
Connecting to github.com (13.234.210.38:443)
Connecting to github-releases.githubusercontent.com (185.199.108.154:443)
saving to &#39;hugo_0.56.3_Linux-64bit.tar.gz&#39;
hugo_0.56.3_Linux-64 100% |*********************************************************************************************************************************************************************************************************************************| 11.4M 0:00:00 ETA
&#39;hugo_0.56.3_Linux-64bit.tar.gz&#39; saved
/home # ls
hugo_0.56.3_Linux-64bit.tar.gz
/home # tar -xf hugo_0.56.3_Linux-64bit.tar.gz
/home # ls
LICENSE README.md hugo hugo_0.56.3_Linux-64bit.tar.gz
/home # cp hugo /usr/bin/
/home # mkdir test
/home # cd test/hugo
/home # ls
LICENSE README.md hugo hugo_0.56.3_Linux-64bit.tar.gz test
/home # cd test/
/home/test # hugo
Building sites … WARN 2021/02/19 16:52:24 found no layout file for &amp;quot;HTML&amp;quot; for &amp;quot;taxonomyTerm&amp;quot;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination.
WARN 2021/02/19 16:52:24 found no layout file for &amp;quot;HTML&amp;quot; for &amp;quot;home&amp;quot;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination.
WARN 2021/02/19 16:52:24 found no layout file for &amp;quot;HTML&amp;quot; for &amp;quot;taxonomyTerm&amp;quot;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination.
| EN
+------------------+----+
Pages | 3
Paginator pages | 0
Non-page files | 0
Static files | 0
Processed images | 0
Aliases | 0
Sitemaps | 1
Cleaned | 0
Total in 4 ms
/home/test # ls
public resources
/home/test # cd ..
/home # ls
LICENSE README.md hugo hugo_0.56.3_Linux-64bit.tar.gz test
/home # rm -rf ./*
/home # exit
aghontpi@elitebook:~$
aghontpi@elitebook:~$ docker container stop testalpine
testalpine
aghontpi@elitebook:~$ docker commit testalpine testalpinewithhugo/0.1
sha256:c305edf7f82a912801ae44dfe6ffe9e834e0541728295c2968ef69ad2ba9e90f
aghontpi@elitebook:~$ docker image ls testalpinewithhugo/0.1
REPOSITORY TAG IMAGE ID CREATED SIZE
testalpinewithhugo/0.1 latest c305edf7f82a 14 seconds ago 60.1MB
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;host-the-image-remotely-in-a-service-of-your-choice&#34;&gt;Host the image remotely in a service of your choice.&lt;/h3&gt;
&lt;p&gt;Then use services like &lt;a href=&#34;https://hub.docker.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;docker-hub&lt;/a&gt; to your private repo, it will look like below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/preconfigured-binary-using-docker/docker-container-export-and-upload-to-docker-hub.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;shell-script-to-orchestrate-the-whole-thing&#34;&gt;Shell script to orchestrate the whole thing.&lt;/h3&gt;
&lt;p&gt;Didn&amp;rsquo;t want to brushup my sheel script so wrote a python script and used it as executable instead.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/aghontpi/8271dc0f28c2c844ae2a0d1e03c70bf5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to the following code&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#! /usr/bin/python3
import os
calling_directory = os.getcwd()
cmd = f&amp;quot;docker run --rm -it \
--user $(id -u):$(id -g) \
-v &#39;/etc/group:/etc/group:ro&#39; \
-v &#39;/etc/passwd:/etc/passwd:ro&#39; \
-v &#39;/etc/shadow:/etc/shadow:ro&#39;
-v {calling_directory}/:/tmp/ \
-e HUGO_ENV \
-p 80:1313 \
bluepie/hugo:0.1 \
/bin/sh -c &#39;cd /tmp/ &amp;amp;&amp;amp; hugo &amp;quot; + &#39; &#39;.join(sys.argv[1:]) +&amp;quot; &#39;&amp;quot;
print(cmd)
os.system(cmd)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;finally-installation-script&#34;&gt;Finally Installation script&lt;/h3&gt;
&lt;p&gt;The code is verbose, so check it out through the link.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/aghontpi/a9f160d80923823757a9894caf37aba7&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;link to installation script&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;what the script does..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check if hugo and docker is already installed&lt;/li&gt;
&lt;li&gt;create .bin directory inside $HOME&lt;/li&gt;
&lt;li&gt;downloads the &lt;a href=&#34;https://gist.github.com/aghontpi/8271dc0f28c2c844ae2a0d1e03c70bf5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;code&lt;/a&gt; and places it as executable inside $HOME/.bin/hugo&lt;/li&gt;
&lt;li&gt;adds the path $HOME/.bin to .bashrc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;script-in-action&#34;&gt;Script in action&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
aghontpi@elitebook:/tmp$ ./install-script.py
&amp;gt; docker-hugo custom binary script v0.0.1
&amp;gt; docker is installed proceeding..
&amp;gt; hugo does not exists, initiating docker pull and installation
&amp;gt; authenticating /w docker, enter credential when asked
Authenticating with existing credentials...
WARNING! Your password will be stored unencrypted in /home/aghontpi/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store
Login Succeeded
&amp;gt; pulling from docker repo
0.1: Pulling from bluepie/hugo
Digest: sha256:db54d94cfb7ad12726b1ee9f5fa7b2a2ad9d7e567021886fe2dd74e4262a43ea
Status: Image is up to date for bluepie/hugo:0.1
docker.io/bluepie/hugo:0.1
&amp;gt; getting the custom script
&amp;gt; writing to disc
&amp;gt; setting permission
&amp;gt; backup cmd -&amp;gt; cp /home/aghontpi/.bashrc /home/aghontpi/.bashrc_bkp_19022021-21:20:15
&amp;gt; modifying bashrc of user
&amp;gt; installation complete
---&amp;gt; use a new terminal to test &amp;lt;---
aghontpi@elitebook:/tmp$
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;I learned a lot through this little experiment, It saves a ton of my time.&lt;/p&gt;</description></item><item><title>AdventOfCode-2020</title><link>//bluepie.in/2020/12/adventofcode-2020/</link><pubDate>Tue, 29 Dec 2020 23:02:55 +0530</pubDate><guid>//bluepie.in/2020/12/adventofcode-2020/</guid><description>
&lt;blockquote&gt;
&lt;p&gt;This month was quite interesting, I stopped all developemt (except office work, which is still sad, imo I should have taken a break from that too) and focused my attention towards coding challenges, by newyear have to go chennai for resuming my work life, the timing for it was the worst.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;what-is-advent-of-code&#34;&gt;what is advent of code?&lt;/h2&gt;
&lt;p&gt;AOC is a series of programming challenges, two problems unlock each day, till christmas, i.e untill dec 25th.&lt;/p&gt;
&lt;h2 id=&#34;what-i-gained&#34;&gt;what I gained?&lt;/h2&gt;
&lt;p&gt;algorithms, datastructures, problem solving concepts, programming concepts and mainly it was fun and helped me take my mind off things.&lt;/p&gt;
&lt;h2 id=&#34;questions-and-solutions&#34;&gt;Questions and Solutions.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aghontpi/AdventOfCode2020&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Check the repo for questions and solutions.&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Publishing Npm Package</title><link>//bluepie.in/2020/11/publishing-npm-package/</link><pubDate>Mon, 30 Nov 2020 11:47:43 +0530</pubDate><guid>//bluepie.in/2020/11/publishing-npm-package/</guid><description>
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Personal Update: I finally managed to change my github username with all its dependencies to aghontpi, it was less work than I expected. Gosh, Its been 6 months already..since I decided to change my username. Incase my future self is wondering, its still work from home, probablly will go chennai after new years&amp;rsquo; i.e 2021.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;This month was boring as hell in terms of office work, since I had to work on Extjs, I introduced some flare into it, but making it similar to react, because of this, it much easier to work on.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The more important stuff - Learnt to publish a package in npm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;backstory&#34;&gt;Backstory&lt;/h2&gt;
&lt;p&gt;So I wanted to do this for almost a year, I never got around it, main reason being, the other person who&amp;rsquo;s collaborating leaving. One of my colleagues &amp;amp; a good friend of mine asked if we could do any open-source projects, this was after he just demonstrated a angular componenet that he was building. It looked cool, So I told him Why not publish this?.
So that is what we did, but decided to do it for react and publish it to npm.&lt;/p&gt;
&lt;h2 id=&#34;reason-goal&#34;&gt;Reason/Goal&lt;/h2&gt;
&lt;p&gt;I wanted to learn, what are the steps necessary to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;publish to npm,&lt;/li&gt;
&lt;li&gt;convert a component so that it can be published,&lt;/li&gt;
&lt;li&gt;generate build
&lt;ul&gt;
&lt;li&gt;compiling typescript with types file&lt;/li&gt;
&lt;li&gt;bundle the whole library as package&lt;/li&gt;
&lt;li&gt;comparing webpack, lerna, rollup, etc.
and lastly&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;just for the fun of it&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-idea&#34;&gt;The idea&lt;/h2&gt;
&lt;p&gt;The idea is Table, the logic and functionality was all handled by my friend, I took care of remaining things. left the use cases for him to handle.&lt;/p&gt;
&lt;h2 id=&#34;so-what-i-learnt&#34;&gt;So what I learnt?&lt;/h2&gt;
&lt;h3 id=&#34;bundling&#34;&gt;Bundling&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;em&gt;Removing react-scripts to custom scripts&lt;/em&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After some re-search found react-scripts was good, but not suitable for a libaray. so went ahead with just using babel,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rimraf lib/ &amp;amp;&amp;amp; babel src -d lib/
rimraf lib/ &amp;amp;&amp;amp; babel src --watch -d lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;.babelrc.js&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = {
presets: [
[
&amp;quot;@babel/preset-react&amp;quot;,
{
development: process.env.BABEL_ENV === &amp;quot;development&amp;quot;,
},
&amp;quot;@babel/preset-env&amp;quot;,
],
],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;but babel can not bundle/compile css files, which was used in out project, so researched further on bundlers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;moving to webpack&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The final decision came down to choosing between rollup and webpack. rollup was new to me, webpack, I already had experience with.. &amp;amp; my requirements was pretty simple, bundle files to /lib/index.js.
So went ahead with just using webpack.&lt;/p&gt;
&lt;p&gt;processing in webpack&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rimraf lib/ &amp;amp;&amp;amp; webpack
rimraf lib/ &amp;amp;&amp;amp; webpack --env mode=dev --watch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;webpack.config.js&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const path = require(&amp;quot;path&amp;quot;)
const includeFolder = path.resolve(__dirname, &amp;quot;src&amp;quot;)
const outputFolder = path.resolve(__dirname, &amp;quot;lib&amp;quot;)
module.exports = (env, argv) =&amp;gt; {
const mode = env ? (env.mode == &amp;quot;dev&amp;quot; ? &amp;quot;development&amp;quot; : &amp;quot;production&amp;quot;) : &amp;quot;production&amp;quot;
console.log(`running in ${mode} mode`)
return {
entry: &amp;quot;./src/Index.tsx&amp;quot;,
mode,
output: {
filename: &amp;quot;index.js&amp;quot;,
path: outputFolder,
library: &amp;quot;dynamic-table-react&amp;quot;,
libraryTarget: &amp;quot;umd&amp;quot;,
},
module: {
rules: [
{ //process css files
test: /\.css$/i,
include: includeFolder,
use: [&amp;quot;style-loader&amp;quot;, &amp;quot;css-loader&amp;quot;],
},
{
// process js and ts files
test: /\.(js|mjs|jsx|ts|tsx)$/,
include: includeFolder,
use: {
loader: &amp;quot;babel-loader&amp;quot;,
},
},
],
},
externals: {
react: &amp;quot;react&amp;quot;,
&amp;quot;react-dom&amp;quot;: &amp;quot;react-dom&amp;quot;,
},
resolve: {
extensions: [&amp;quot;.js&amp;quot;, &amp;quot;.jsx&amp;quot;, &amp;quot;.ts&amp;quot;, &amp;quot;.tsx&amp;quot;],
},
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;renamed .babelrc.js to .babelrc&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// using preset to process react and typescript files
{
&amp;quot;presets&amp;quot;: [&amp;quot;@babel/preset-env&amp;quot;, &amp;quot;@babel/preset-react&amp;quot;, &amp;quot;@babel/preset-typescript&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;genrating-types-file&#34;&gt;Genrating Types file&lt;/h3&gt;
&lt;p&gt;generating types file .d.ts was soo much pain, bacause webpack could not do it, (at least at the time of writing this).&lt;/p&gt;
&lt;p&gt;tsc could do it, but it needs tsconfig.json and also I would have to include it as seperate script in package.json, This is where I thought I should have went with rollup or tsdx.&lt;/p&gt;
&lt;p&gt;I have not yet added this to the package, still experimenting on stuff, Will update this once I complete that part.&lt;/p&gt;
&lt;h3 id=&#34;structuring-package-json&#34;&gt;structuring package.json&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;em&gt;Stuff to configure in package.json, importantly main, scripts, types file, peer dependencies.&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
...,
&amp;quot;main&amp;quot;: &amp;quot;lib/index.js&amp;quot;,Removing react-scripts to custom scripts
&amp;quot;peerDependencies&amp;quot;: {
&amp;quot;react&amp;quot;: &amp;quot;^x.x.x&amp;quot;,
&amp;quot;react-dom&amp;quot;: &amp;quot;^x.x.x&amp;quot;
},
&amp;quot;scripts&amp;quot;: {
&amp;quot;build&amp;quot;: &amp;quot;rimraf lib &amp;amp;&amp;amp; webpack&amp;quot;,
&amp;quot;start&amp;quot;: &amp;quot;rimraf lib/ &amp;amp;&amp;amp; webpack --env mode=dev --watch&amp;quot;
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;since we added react to be a &lt;a href=&#34;https://nodejs.org/en/blog/npm/peer-dependencies/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;peer-dependency&lt;/a&gt;, we oughta add following to webpack config.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;
externals: {
&amp;quot;react&amp;quot;: &amp;quot;react&amp;quot;,
&amp;quot;react-dom&amp;quot;: &amp;quot;react-dom&amp;quot;,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;other-minor-stuff&#34;&gt;Other minor stuff&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;building and publishing commands with npm/yarn&lt;/li&gt;
&lt;li&gt;using yarn link/ npm link while developing&lt;/li&gt;
&lt;li&gt;maintain packages in npmjs (admin setting for package)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;conclusion.&lt;/h2&gt;
&lt;p&gt;It was fun learning, creating and publishing the package. The link to the &lt;a href=&#34;https://www.npmjs.com/package/dynamic-table-react&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;package&lt;/a&gt;. untill next time -aghontpi.&lt;/p&gt;</description></item><item><title>Why I Choose Typescript</title><link>//bluepie.in/2020/10/why-i-choose-typescript/</link><pubDate>Thu, 29 Oct 2020 21:34:18 +0530</pubDate><guid>//bluepie.in/2020/10/why-i-choose-typescript/</guid><description>
&lt;p&gt;Hello, we meet again!, how was the week? hope you are well and gud!, This post will be about typescript, I&amp;rsquo;m not explaining what it is, but rather why i choose to use it.&lt;/p&gt;
&lt;h2 id=&#34;typescript-was-everywhere-background&#34;&gt;TypeScript was everywhere - background&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;First of all, I want to clear some air by opening up, &lt;em&gt;In in past, I hated typescript with a passion&lt;/em&gt;, Since then I&amp;rsquo;ve grown a lot as a person, lol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Typescript was the new kid in the block, soo much hype was around it, stackoverflow surveys did not help either since it had typescript ranked top in their survey.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been a fan of &lt;a href=&#34;https://www.freecodecamp.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;codecamp&amp;rsquo;s&lt;/a&gt; work, they do useful stuff for the community,&lt;/p&gt;
&lt;p&gt;To my suprise they announced &lt;a href=&#34;https://twitter.com/ossia/status/1183845054449930241?s=20&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;this on twitter&lt;/a&gt;, I&amp;rsquo;ve been following their project - &lt;a href=&#34;https://github.com/freeCodeCamp/chapter&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;chapter&lt;/a&gt;, from then. After a month into development they migrated to typescript from javascript, there is an entire debate on their discord and github, but more importantly I was pissed because of this decision.&lt;/p&gt;
&lt;p&gt;Ever since they changed the project to use typescript, gradually I started to reason and see-past my hate-wall (because of the respect I have for them). But I was not ready to try it out though, So a month later, I worked on a angular project, I learned basic typescipt(1% - 8%) to complete the project, was still writing javascript code everywhere, I was the &amp;ldquo;any&amp;rdquo; guy, if you know what I mean.&lt;/p&gt;
&lt;h2 id=&#34;javascript-my-experience&#34;&gt;Javascript - my experience&lt;/h2&gt;
&lt;p&gt;After the angular project, I did a few projects in React &lt;a href=&#34;https://bluepie.in/2020/07/rinku/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;rinku&lt;/a&gt;, &lt;a href=&#34;https://bluepie.in/2020/09/gatsby-experiment/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;with gatsby&lt;/a&gt; to name a few, I did the entire thing in javascript. From my experience, when the codebase grew along with the files, some issues I faced were,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Trying to remember object properties, function properties, etc, avoidable bcoz of autocompletion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;every so-often you are searching through the entire project, either by using find in files/grep.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Facing errors that could be avoidable by typesafety and static analysis, spending a ton of time debugging and fixing it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lack of easy peek into method signatures of third party libraries.`&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintaining seperate documentation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;It should be noted that I&amp;rsquo;m adding this on top of es-lint and prettier.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;solution-reasons-for-using-typescript&#34;&gt;Solution - reasons for using Typescript&lt;/h2&gt;
&lt;p&gt;So naturally when I was starting a new project, I choose typescript as the result of my previous experience, I striclty enable &lt;a href=&#34;https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-explicit-any.md&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;no-explicit-any&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before proceeding below, it should be noted you wont get any of the benefits if they aren&amp;rsquo;t initialized with types.&lt;/p&gt;
&lt;p&gt;ex:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;
interface ApiItemProps {
...
}
const [api, setApi] = useState&amp;lt;ApiItemProps[] | null&amp;gt;(null);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;What I get with typescript?&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;autocomplete&#34;&gt;Autocomplete&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/autocomplete-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/autocomplete-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;library-definition&#34;&gt;Library definition&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/library-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/library-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;type-checking-for-parameters&#34;&gt;Type checking for parameters&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/typing-passed-params-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/typechecking-passed-params.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;customtypes-etc-for-comfort&#34;&gt;Customtypes, etc.. for comfort&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-3.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-4.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/comfort-5.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;static-analysis&#34;&gt;Static analysis&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/static-1.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/static-2.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;typing-api-responses-implemented-with-awesome-library-quicktype-https-github-com-quicktype-quicktype&#34;&gt;Typing api responses - implemented with awesome library &lt;a href=&#34;https://github.com/quicktype/quicktype&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;quicktype&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;//bluepie.in/images/posts/why-i-choose-typescript/typing-api.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;advanced-features-of-typescript&#34;&gt;Advanced features of typescript,&lt;/h2&gt;
&lt;p&gt;To achieve the best experience, typescript offers &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/advanced-types.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;advanced&lt;/a&gt;, &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/utility-types.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;unity&lt;/a&gt; and &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;much more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;an example for unity and how I use it.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;interface ListItemProps {
onPress: () =&amp;gt; void;
id: string;
name: string;
color: keyof theme[&#39;colors&#39;];
}
type MenuItemProps = Omit&amp;lt;ListItemProps, &#39;onPress&#39;&amp;gt;;
interface FlatListRenderProps {
item: MenuItemProps;
index: number;
}
const [list, setFlatList] = useState&amp;lt;FlatListRenderProps[] | null&amp;gt;(null);
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;For more &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;official handbook&lt;/a&gt;, explains a lot better than me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m just starting to adapt typescript in my javascript workflow, this is the begining phase, obviously there is much more to learn. Bye, See ya soon - Gopinath.&lt;/p&gt;</description></item></channel></rss>